{"version":3,"file":"static/js/207.10375543.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/OurFriends/getFriends.jsx","components/OurFriendsList/WorkTime.jsx","components/OurFriendsList/OurFriendsList.jsx","pages/OurFriends/OurFriends.jsx"],"sourcesContent":["import { Spinner,Box } from '@chakra-ui/react';\n\nconst Loader = () => {\n    return (\n    <Box textAlign={'center'}>\n        <Spinner\n            thickness='4px'\n            speed='0.85s'\n            emptyColor='#F59256;'\n            color='#F5F5F5'\n            textAlign='center'\n            size='xl' />\n    </Box>\n    )\n  };\n  \n  export default Loader;","const BASE_URL = \"https://goit-project-petly-backend.onrender.com/api\";\n    \n    export const getFriends = async () => {\n        const response = await fetch(`${BASE_URL}/services`);\n        const result = response.json();\n        return result;\n    };\n","import { nanoid } from 'nanoid';\nimport {\n  Box,\n  Button,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Text,\n} from '@chakra-ui/react';\n\nexport const WorkTime = ({ workDays }) => {\n  const days = ['MN: ', 'TU: ', 'WE: ', 'TH: ', 'FR: ', 'SA: ', 'SU: '];\n  const currentDate = new Date();\n  const currentDay = currentDate.getDay();\n\n  console.log(currentDay);\n\n  const indexUpdater = () => {\n    if (currentDay === 0) {\n      return 6;\n    }\n    return currentDay - 1;\n  };\n  return (\n    <>\n      <Popover>\n        <PopoverTrigger>\n          <Button\n            alignItems={'start'}\n            justifyContent={'start'}\n            variant=\"link\"\n            color={'#111111'}\n            fontWeight={'medium'}\n            fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n            lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n            type=\"click\"\n          >\n            {workDays[indexUpdater()].from && workDays[indexUpdater()].to\n              ? `${workDays[indexUpdater()]?.from} - ${\n                  workDays[indexUpdater()]?.to\n                }`\n              : 'Closed'}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent maxW={'120px'}>\n          <PopoverBody\n            display={'inline-block'}\n            p={'12px'}\n            border={'1px solid #f59256'}\n            cursor={'pointer'}\n            bgColor={'#FFFFFF'}\n            boxShadow={'4px 4px 8px rgba(0, 0, 0, 0.25)'}\n            borderRadius={'8px'}\n            fontWeight={'medium'}\n            fontSize={'12px'}\n            lineHeight={'1.34'}\n          >\n            {workDays.map(({ from, to, isOpen }, index) => (\n              <Box key={nanoid()}>\n                {isOpen ? (\n                  <Box\n                    display={'flex'}\n                    justifyContent={'space-between'}\n                    bgColor={\n                      index + 1 === currentDay\n                        ? 'accent.accentOrange'\n                        : 'inherit'\n                    }\n                    borderRadius={'sm'}\n                    px={'2px'}\n                  >\n                    <Text>{days[index]}</Text>\n                    <Text>\n                      {from}-{to}\n                    </Text>\n                  </Box>\n                ) : (\n                  <Box display={'flex'} justifyContent={'space-between'}>\n                    <Text>{days[index]} </Text>\n                    <Text>Closed</Text>\n                  </Box>\n                )}\n              </Box>\n            ))}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n","import { WorkTime } from './WorkTime';\nimport {\n  SimpleGrid,\n  CardHeader,\n  Card,\n  Text,\n  Box,\n  Image,\n  Link,\n  Stack,\n  CardBody,\n} from '@chakra-ui/react';\n\nexport const OurFriendsList = ({ friends }) => {\n  return (\n    <SimpleGrid\n      justifyItems={'center'}\n      columns={{ base: 1, md: 2, lg: 3 }}\n      spacing={{ base: '12px', md: '32px' }}\n    >\n      {friends.map(\n        ({\n          _id,\n          title,\n          url,\n          addressUrl,\n          address,\n          imageUrl,\n          workDays,\n          phone,\n          email,\n        }) => (\n          <Card\n            bgColor={'#FFFFFF'}\n            borderRadius={'40px'}\n            boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n            key={_id}\n            maxW={{ base: '280px', md: '336px', lg: '394px' }}\n            p={{ base: '12px', md: '16px' }}\n          >\n            <CardHeader\n              as={'h3'}\n              p={0}\n              textAlign={'center'}\n              mt={{ base: 2.5, md: 4 }}\n              mb={{ base: 2.5, md: 4 }}\n              color={'#F59256'}\n              fontWeight={'bold'}\n              fontSize={{ base: 'sm', md: 'md', lg: 'xl' }}\n              lineHeight={{ base: '1.33', md: 'short', lg: '1.35' }}\n            >\n              <Link\n                position={'relative'}\n                color={'#f59256'}\n                _after={{\n                  content: '\"\"',\n                  pos: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  w: 0,\n                  h: '1px',\n                  bg: '#f59256',\n                  transition: 'width 300ms linear',\n                }}\n                __css={{\n                  '&.hover::after': {\n                    w: '100%',\n                  },\n                }}\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {title}\n              </Link>\n            </CardHeader>\n\n            <Stack\n              direction={{ base: 'column', sm: 'row' }}\n              mt={{ base: '12px', md: '16px' }}\n            >\n              <Box w={{ base: '110px', md: '120px', xl: '158px' }}>\n                <Image m={0} src={imageUrl} alt={title} />\n              </Box>\n              <Stack>\n                <CardBody p={0}>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '4px', md: '8px', lg: '12px' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    position={'relative'}\n                  >\n                    Time:\n                    {workDays ? <WorkTime workDays={workDays} /> : <hr />}\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '4px', md: '8px', lg: '12px' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"address\"\n                  >\n                    Address:\n                    <Link href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {address ? <span>{address}</span> : <hr />}\n                    </Link>\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '4px', md: '8px', lg: '12px' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"email\"\n                  >\n                    Email:\n                    <Link href=\"mailto:{address}\">\n                      {' '}\n                      {email ? email : <Text />}{' '}\n                    </Link>\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"phone\"\n                  >\n                    Phone:\n                    <Link href=\"tel:{phone}\"> {phone ? phone : <hr />} </Link>\n                  </Box>\n                </CardBody>\n              </Stack>\n            </Stack>\n          </Card>\n        )\n      )}\n    </SimpleGrid>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport Container from '../../shared/components/Box/Container';\nimport Section from '../../shared/components/Box/Section';\nimport { Heading } from '@chakra-ui/react';\nimport Loader from 'components/Loader/Loader';\nimport { getFriends } from './getFriends';\nimport { OurFriendsList } from '../../components/OurFriendsList/OurFriendsList';\n\nconst OurFriends = () => {\n  const [friends, setFriends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getFriends();\n        setFriends(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, []);\n\n  return (\n    <Container>\n      <Section pt={{ base: '58px', md: '94px', lg: '72px' }}>\n        <Heading\n          as={'h1'}\n          fontSize={{ base: '24px', md: '48px' }}\n          fontWeight={'bold'}\n          lineHeight={'short'}\n          textAlign={'center'}\n          mb={{ base: '40px', md: '45px', xl: '60px' }}\n        >\n          Our friend\n        </Heading>\n        {isLoading ? <Loader /> : <OurFriendsList friends={friends} />}\n      </Section>\n    </Container>\n  );\n};\n\nexport default OurFriends;\n"],"names":["textAlign","thickness","speed","emptyColor","color","size","getFriends","fetch","response","result","json","WorkTime","workDays","days","currentDay","Date","getDay","console","log","indexUpdater","alignItems","justifyContent","variant","fontWeight","fontSize","base","md","lg","lineHeight","type","from","to","maxW","display","p","border","cursor","bgColor","boxShadow","borderRadius","map","index","isOpen","px","nanoid","OurFriendsList","friends","justifyItems","columns","spacing","_id","title","url","addressUrl","address","imageUrl","phone","email","as","mt","mb","position","_after","content","pos","left","bottom","w","h","bg","transition","__css","href","target","rel","direction","sm","xl","m","src","alt","flexDirection","useState","setFriends","isLoading","setIsLoading","useEffect","message","Container","Section","pt","Loader"],"sourceRoot":""}