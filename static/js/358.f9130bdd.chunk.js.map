{"version":3,"file":"static/js/358.f9130bdd.chunk.js","mappings":"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","sources":["components/NoticesSearch/NoticesSearch.jsx","../node_modules/@chakra-ui/layout/dist/chunk-UNOISFZK.mjs","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","components/NoticesCategoryItem/NoticesCategoryItem.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","components/NoticesCategoriesList/NoticesCategoriesList.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { FilterInput } from 'shared/components';\n// import { CloseIcon, Search2Icon } from '@chakra-ui/icons';\n// import { Box } from '@chakra-ui/react';\n\nconst NoticesSearch = onSubmit => {\n  const [query, setQuery] = useState('');\n  const [\n    // filteredData,\n    setFilteredData,\n  ] = useState([]);\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    setFilteredData(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('What pet do you need?');\n      return;\n    }\n    onSubmit(query);\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n  };\n\n  return (\n    <FilterInput\n      name={'search'}\n      onChange={handleChange}\n      handleSearch={handleSubmit}\n      handleClear={clearInput}\n      value={query}\n      mb={'28px'}\n    />\n    // <Box>\n    //   <Box onSubmit={handleSubmit}>\n    //     <Box\n    //       type=\"text\"\n    //       name=\"input\"\n    //       autocomplete=\"off\"\n    //       placeholder=\"Search\"\n    //       onChange={handleChange}\n    //       value={filteredData}\n    //     />\n    //     <Box type=\"submit\">\n    //       {filteredData.length === 0 ? (\n    //         <Search2Icon />\n    //       ) : (\n    //         <CloseIcon onClick={clearInput} />\n    //       )}\n    //     </Box>\n    //   </Box>\n    // </Box>\n  );\n};\n\n// NoticesSearch.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nexport default NoticesSearch;\n","// src/link-box.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(\n  function LinkOverlay2(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.a,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-linkbox__overlay\", className),\n        rel: isExternal ? \"noopener noreferrer\" : rel,\n        target: isExternal ? \"_blank\" : target,\n        __css: {\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }\n      }\n    );\n  }\n);\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      position: \"relative\",\n      ...rest,\n      className: cx(\"chakra-linkbox\", className),\n      __css: {\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1\n        }\n      }\n    }\n  );\n});\n\nexport {\n  LinkOverlay,\n  LinkBox\n};\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","import { Outlet } from 'react-router-dom'\nimport {Box, LinkBox, Link} from '@chakra-ui/react';\n\nconst NoticesCategoriesNav = () => {\n  return (\n    <Box>\n        <LinkBox mb={'30px'}>\n            <Link to={\"sell\"}>sell</Link>\n            <Link to={\"lost-found\"}>lost/found</Link>\n            <Link to={\"free\"}>in good hand</Link>\n        </LinkBox>\n        <Outlet />\n    </Box>\n  )\n}\n\nexport default NoticesCategoriesNav","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import React from 'react'\nimport {Text, Box, Image, Card, CardBody, Heading, CardFooter} from '@chakra-ui/react'\nimport { CardButton, FavoriteButton } from 'shared/components'\n\nconst NoticesCategoryItem = (\n  {\n  id,\n  avatar,\n  favorite,\n  title,\n  breed,\n  location,\n  age,\n  price,\n  condition,\n  onDeletePets\n  }) => {\n  return (\n    <Card\n      as={'li'}\n      width={'100%'}\n      boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n      borderBottomRadius={'20px'}\n      _notLast={{mb: '32px'}}>\n        <CardBody p={'0'} mb={(price || favorite) ? '0' : '30px'}>\n          <Box position={'relative'}>\n            <Image src={avatar} alt={breed} width={'100%'} height={'288px'}/>\n            <Box\n              as={'span'}\n              position={'absolute'}\n              top={'20px'}\n              display={'inline-flex'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              w={'158px'}\n              h={'28px'}\n              px={'20px'}\n              py={'6px'}\n              borderRightRadius={'20px'}\n              color={'#111111'}\n              fontSize={'xs'}\n              fontWeight={'medium'}\n              lineHeight={'xl'}\n              letterSpacing={'0.04em'}\n              backgroundColor={'rgba(255, 255, 255, 0.6)'}\n              backdropFilter={'blur(2px)'}>\n                {condition}\n            </Box>\n            <FavoriteButton/>\n          </Box>\n          <Box p={'20px'}>\n            <Heading\n              mb={'20px'}\n              color={'#111111'}\n              fontSize={'28px'}\n              fontWeight={'bold'}\n              lineHeight={'short'}\n              letterSpacing={'-0.01em'}>\n                {title}\n            </Heading>\n            <Text\n              mb={'8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Breed: {breed}\n            </Text>\n            <Text\n              mb={'8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Location: {location}\n            </Text>\n            <Text\n              mb={price && '8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Age: {age}\n            </Text>\n            {price && <Text\n                        mb={price && '8px'}\n                        fontSize={'16px'}\n                        fontWeight={'medium'}\n                        lineHeight={'short'}\n                        color={'#111111'}>\n                          Price: {price}\n                      </Text>}\n          </Box>\n        </CardBody>\n        <CardFooter\n          pt={'0'}\n          px={'16px'}\n          pb={!favorite ? '32px' : '16px'}\n          width={'100%'}\n          display={'flex'}\n          flexDirection={'column'}>\n            <CardButton mb={favorite && '12px'}>\n              Learn more\n            </CardButton>\n            {favorite &&  <CardButton controle='delete'>\n                            Delete\n                          </CardButton>}\n        </CardFooter>\n    </Card>\n  )\n}\n\nexport default NoticesCategoryItem","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","import React from 'react';\nimport NoticesCategoryItem from '../NoticesCategoryItem/NoticesCategoryItem'\nimport { SimpleGrid } from '@chakra-ui/react';\nimport {default as userPets} from './ListTest.json'\n\nconst NoticesCategoriesList = () => {\n  // const filterPets = userPets.filter(pets => pets.condition === condition);\n  return (\n    <SimpleGrid\n      as='ul'\n      mx={'auto'}\n      maxWidth={'280px'}\n      width={'full'}\n      listStyleType={'none'}\n      key={userPets.id}>\n        {userPets.map(\n          ({ id, favorite, avatar, title, breed, location, age, condition, price }) => (\n            <NoticesCategoryItem\n              key={id}\n              avatar={avatar}\n              favorite={favorite}\n              title={title}\n              breed={breed}\n              location={location}\n              age={age}\n              price={price}\n              condition={condition}\n            />\n          )\n        )}\n    </SimpleGrid>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesCategoriesList from \"components/NoticesCategoriesList/NoticesCategoriesList\";\n// import NoticesCategoryItem from \"components/NoticesCategoryItem/NoticesCategoryItem\";\n// import AddNoticeButton from \"components/AddNoticeButton/AddNoticeButton\";\nimport { Container, Section } from 'shared/components';\nimport { Heading } from '@chakra-ui/react'\n\nconst Notices = () => {\n  return (\n    <Container>\n      <Section>\n        <Heading\n          as={'h1'}\n          fontSize={'2xl'}\n          fontWeight={'bold'}\n          lineHeight={'short'}\n          textAlign={'center'}\n          mb={7}>\n            Find your favorite pet\n        </Heading>\n        <NoticesSearch/>\n        <NoticesCategoriesNav />\n        <NoticesCategoriesList />\n        {/* <AddNoticeButton />  */}\n      </Section>\n    </Container>\n  );\n};\n\nexport default Notices;\n"],"names":["onSubmit","useState","query","setQuery","setFilteredData","name","onChange","e","target","value","toLowerCase","handleSearch","preventDefault","trim","alert","handleClear","mb","LinkBox","forwardRef","props","ref","isExternal","rel","className","rest","jsx","chakra","cx","__css","position","content","cursor","display","top","left","zIndex","width","height","Link","styles","useStyleConfig","omitThemingProps","displayName","to","createStylesContext","CardStylesProvider","useCardStyles","Card","children","direction","justify","align","useMultiStyleConfig","flexDirection","justifyContent","alignItems","minWidth","wordWrap","container","CardBody","body","CardFooter","footer","id","avatar","favorite","title","breed","location","age","price","condition","onDeletePets","as","boxShadow","borderBottomRadius","_notLast","p","src","alt","w","h","px","py","borderRightRadius","color","fontSize","fontWeight","lineHeight","letterSpacing","backgroundColor","backdropFilter","pt","pb","controle","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","useTheme","n","_value","getToken","widthToColumns","mx","maxWidth","listStyleType","userPets","textAlign"],"sourceRoot":""}