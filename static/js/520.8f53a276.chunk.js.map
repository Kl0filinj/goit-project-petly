{"version":3,"file":"static/js/520.8f53a276.chunk.js","mappings":"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","sources":["components/NoticesSearch/NoticesSearch.jsx","components/ModalAddNotice/addNoticeInitialState.js","components/ModalAddNotice/addNoticeSchema.js","components/ModalAddNotice/ModalAddNotice.jsx","../node_modules/@chakra-ui/icons/dist/chunk-VJ54TX72.mjs","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { FilterInput } from 'shared/components';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst NoticesSearch = ({ searchFunction }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    searchFunction(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast('What pet do you need?');\n      return;\n    }\n    searchFunction(query);\n  };\n\n  const clearInput = () => {\n    setQuery('');\n    searchFunction('');\n  };\n\n  return (\n    <>\n      <FilterInput\n        name={'search'}\n        onChange={handleChange}\n        handleSearch={handleSubmit}\n        handleClear={clearInput}\n        value={query}\n        mb={'28px'}\n      />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default NoticesSearch;\n","const addNoticeInitialState = {\n    categoryName: 'lost-found',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: 'male',\n    location: '',\n    price: '',\n    photo: null,\n    comments: '',\n}\n\nexport default addNoticeInitialState","import * as yup from 'yup';\nimport moment from 'moment/moment'\n\nconst regexPrice = /(^[1-9])(\\d*)$/\nconst regexAdress = /^(?:(?:\\w+-\\w+)+|(?:\\w+)+),\\s(?:(?:\\w+-\\w+)+|(?:\\w+)+)$/\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst addNoticeSchema = yup.object().shape({\n    categoryName: yup.string().oneOf(['lost-found', 'for-free', 'sell']).required(\"Required\"),\n    title: yup.string().min(2).max(48).required(\"Required\"),\n    name: yup.string().min(2).max(16),\n    birthday: yup.date().min(moment(\"06021995\", \"DDMMYYYY\"), 'Must be at later than 06.02.1995').max(moment(), `Must be at earlier than ${moment().add(1, 'days').format('DD.MM.YYYY')}`),\n    breed: yup.string().min(2).max(24),\n    sex: yup.string().oneOf(['male', 'female']).required(\"Required\"),\n    location: yup.string().matches(regexAdress, 'Must be in format City, Region').required(\"Required\"),\n    price: yup.string().when('categoryName', {\n      is: 'sell',\n      then: (schema) => schema.matches(regexPrice, 'Must be a positive integer number').required(\"Required\"),\n      otherwise: (schema) => schema.notRequired(),\n    }),\n    photo: yup.mixed().test(\n      'fileFormat',\n      'Unsupported file type',\n      (value) => value === null || (value && SUPPORTED_FORMATS.includes(value.type))\n    ).nullable(),\n    comments: yup.string().min(8).max(120).required(\"Required\"),\n});\n\nexport default addNoticeSchema\n","import { Formik, Form } from \"formik\"\nimport { useMemo, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { nanoid } from \"nanoid\"\nimport moment from \"moment/moment\"\nimport { Text, Box } from \"@chakra-ui/react\"\nimport { addNotice } from \"redux/notices/notices-operations\"\nimport { getNoticesLoading } from \"redux/notices/notices-selectors\"\nimport { FormikControl, Button, errorToast, successToast } from \"shared/components\"\nimport { addNoticeInitialState, addNoticeSchema } from \"./index\"\n\n\nconst ModalAddsNotice = ({onClose}) => {\n    const dispatch = useDispatch()\n    const isLoading = useSelector(getNoticesLoading)\n    const [firstStep, setFirstStep] = useState(true)\n\n    const titleId = useMemo(()=> nanoid(), [])\n    const nameId = useMemo(()=> nanoid(), [])\n    const birthdayId = useMemo(()=> nanoid(), [])\n    const breedId = useMemo(()=> nanoid(), [])\n    const locationId = useMemo(()=> nanoid(), [])\n    const priceId = useMemo(()=> nanoid(), [])\n    const photoId = useMemo(()=> nanoid(), [])\n    const commentsId = useMemo(()=> nanoid(), [])\n\n    function isDisabled(dirty, errors) {\n        const {title, name, birthday, breed} = errors\n        return !dirty || title !== undefined || name !== undefined || birthday !== undefined || breed !== undefined\n    }\n\n    const handleSubmit = ({categoryName, title, name, birthday, breed, sex, location, price, photo, comments}, {resetForm}) => {\n        const newPet = new FormData()\n        newPet.append('categoryName', categoryName)\n        newPet.append('title', title.trim())\n        newPet.append('name', name.trim())\n        newPet.append('birthdate', birthday ? moment(birthday, \"YYYYY-MM-DD\").format('DD.MM.YYYY') : null)\n        newPet.append('breed', breed.trim())\n        newPet.append('sex', sex)\n        newPet.append('location', location.trim())\n        newPet.append('price', price ? Number(price) : '')\n        newPet.append('photo', photo)\n        newPet.append('comments', comments.trim())\n\n        dispatch(addNotice(newPet))\n        .then(\n            ({error}) => {\n            if (error) {\n                return errorToast(error.message)\n            }\n            successToast('Notice successfully added')\n            resetForm()\n            onClose()\n            }\n        ).catch(\n            (e) => errorToast(e.message)\n        )\n    }\n\n    return (\n        <Formik initialValues={addNoticeInitialState}\n                validationSchema={addNoticeSchema}\n                onSubmit={handleSubmit}\n                validateOnChange={true}\n                validateOnBlur={true}>\n                {({values, errors, dirty}) => (\n                    <Form autoComplete='off' encType=\"multipart/form-data\">\n                        {firstStep\n                            ?   <>\n                                    <FormikControl\n                                        control='category-radio'\n                                        name='categoryName'\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='title'\n                                        label={<>Title of ad<Text as={'span'} color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type title'\n                                        id={titleId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='name'\n                                        label='Name pet'\n                                        placeholder='Type name pet'\n                                        id={nameId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='date'\n                                        name='birthday'\n                                        label='Date of birthday'\n                                        id={birthdayId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='breed'\n                                        label='Breed'\n                                        placeholder='Type breed'\n                                        id={breedId}\n                                        width={60}\n                                        mb={'40px'}\n                                    />\n                                    <Box    \n                                        maxW={'none'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            controle='secondary'\n                                            onClick={()=>setFirstStep(false)}\n                                            isDisabled={isDisabled(dirty, errors)} \n                                            mb={{base:'3', md:'0'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Next\n                                        </Button>\n                                        <Button\n                                            onClick={onClose}\n                                            mr={{md:'5'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Box>\n                                </>\n                            :   <Box \n                                    display={'flex'}\n                                    flexDirection={'column'}\n                                    maxW={'none'}\n                                >  \n                                    <FormikControl\n                                        control='sex-radio'\n                                        name='sex'\n                                        label={<>The sex<Text as={'span'} color={'accent.accentOrange'}>*</Text></>}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='location'\n                                        label={<>Location<Text as={'span'} color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type location'\n                                        id={locationId}\n                                        width={'60'}\n                                    />\n                                    {(values.categoryName === 'sell') && <FormikControl\n                                                                        type='text'\n                                                                        name='price'\n                                                                        label={<>Price<Text as={'span'} color={'accent.accentOrange'}>*</Text></>}\n                                                                        placeholder='Type price'\n                                                                        id={priceId}\n                                                                        width={'60'}\n                                                                    />\n                                    }\n                                    <Text\n                                        fontSize={{base:'18px', md:'2xl'}}\n                                        fontWeight={'medium'}\n                                        lineHeight={{base:'short', md:'1.2'}}\n                                        letterSpacing={'-0.01em'}\n                                        mb={'5'}    \n                                    >\n                                        Load the pet`s image\n                                    </Text>\n                                    <FormikControl\n                                        control=\"file\"\n                                        id={photoId}\n                                        name={'photo'}\n                                        size={{base:'116px', md:'140px'}}\n                                        borderRadius={'20px'}\n                                        plusSize={{base:'55%', md:'50%'}}\n\n                                    />\n                                    <FormikControl\n                                        control=\"textarea\"\n                                        name='comments'\n                                        label={<>Comments<Text as={'span'} color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type comments'\n                                        id={commentsId}\n                                    />\n                                    <Box\n                                        maxW={'none'}\n                                        width={'full'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            type='submit'\n                                            mb={{base:'3', md:'0'}}\n                                            controle='secondary'\n                                            width={{md:'180px'}}\n                                        >\n                                            {isLoading ? 'Adding...' : 'Done'}\n                                        </Button>\n                                        <Button\n                                            onClick={()=>setFirstStep(true)}\n                                            mr={{md:'5'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Back\n                                        </Button>\n                                    </Box>\n                                </Box>\n                        }\n                        \n                    </Form>\n                )}\n        </Formik>\n)}\n\nexport default ModalAddsNotice","// src/Add.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport {\n  AddIcon\n};\n","import { FilterLink, Modal } from 'shared/components';\nimport { Box, useDisclosure, Text, Button } from '@chakra-ui/react';\nimport { ModalAddNotice } from 'components/ModalAddNotice';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\nimport { toast } from 'react-toastify';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst NoticesCategoriesNav = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      toast('Please log in!');\n    }\n    onOpen(true);\n  };\n\n  return (\n    <Box\n      maxWidth={{ base: '280px', md: '704px', xl: '1248px' }}\n      mx={'auto'}\n      id=\"22\"\n    >\n      <Box mb={{ base: '30px', md: '60px' }} display={'flex'}>\n        <Box\n          as={'nav'}\n          maxW={{ base: '280px', md: '474px', xl: '802px' }}\n          display={'flex'}\n          flexWrap={'wrap'}\n          gap={{ base: '12px', md: '16px 12px', xl: '12px' }}\n          mr={'auto'}\n          ml={{ base: 'auto', md: '0' }}\n        >\n          <FilterLink to={'lost-found'}>lost/found</FilterLink>\n          <FilterLink to={'free'}>in good hand</FilterLink>\n          <FilterLink to={'sell'}>sell</FilterLink>\n          {isLoggedIn && (\n            <>\n              <FilterLink to={'favorite'}>favorite ads</FilterLink>\n              <FilterLink to={'own'}>my ads</FilterLink>\n            </>\n          )}\n        </Box>\n        <Box\n          display={'flex'}\n          w={{ base: '80px', md: '140px' }}\n          h={{ base: '80px' }}\n          flexDirection={{ base: 'column-reverse', md: 'row' }}\n          alignItems={{ base: 'center' }}\n          justifyContent={{ base: 'center' }}\n          borderRadius={{ base: '50%', md: '100%' }}\n          bgColor={{ base: '#F59256', md: 'transparent' }}\n          as={'Button'}\n          position={{ base: 'fixed', md: 'static' }}\n          top={'455px'}\n          right={'20px'}\n          zIndex={'2'}\n        >\n          <Text\n            maxWidth={{ xl: '767px' }}\n            size={{ w: '74px', h: '27px' }}\n            textAlign={'center'}\n            fontStyle={'normal'}\n            fontWeight={'500'}\n            fontSize={{ base: '12px', md: '20px' }}\n            lineHeight={'27px'}\n            mr={{ base: '0px', md: '12px' }}\n            color={{ base: 'white', md: '#111111' }}\n          >\n            Add pet\n          </Text>\n          <Button\n            display={'flex'}\n            alignItems={{ base: 'center' }}\n            justifyContent={{ base: 'center' }}\n            backgroundColor={'#F59256'}\n            borderRadius={'50%'}\n            w={{ base: '21px', md: '44px' }}\n            h={{ base: '21px', md: '44px' }}\n            _hover={{ backgroundColor: '#FF6101' }}\n            _focus={{ backgroundColor: '#FF6101' }}\n            onClick={handleClick}\n          >\n            <AddIcon\n              w={{ base: '21px', md: '16px' }}\n              h={{ base: '21px', md: '16px' }}\n              color={'white'}\n            />\n          </Button>\n        </Box>\n        <Modal isOpen={isOpen} onClose={onClose} title={'Add pet'}>\n          <ModalAddNotice onClose={onClose} />\n        </Modal>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport { Container, Section } from 'shared/components';\nimport { Heading } from '@chakra-ui/react';\n\nconst Notices = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  console.log(searchQuery);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const category = location.pathname;\n\n  useEffect(() => {\n    if (category === '/notices') navigate('sell');\n  }, [category, navigate]);\n\n  return (\n    <>\n      <Container>\n        <Section>\n          <Heading\n            as={'h1'}\n            fontSize={{ base: '24px', md: '48px' }}\n            fontWeight={'bold'}\n            lineHeight={'short'}\n            textAlign={'center'}\n            mb={7}\n          >\n            Find your favorite pet\n          </Heading>\n          <NoticesSearch setSearchQuery={setSearchQuery} />\n          <NoticesCategoriesNav />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default Notices;\n"],"names":["searchFunction","useState","query","setQuery","name","onChange","e","target","value","toLowerCase","handleSearch","preventDefault","trim","toast","handleClear","mb","categoryName","title","birthday","breed","sex","location","price","photo","comments","regexPrice","SUPPORTED_FORMATS","yup","shape","oneOf","required","min","max","moment","add","format","matches","when","is","then","schema","otherwise","notRequired","test","includes","type","nullable","onClose","dispatch","useDispatch","isLoading","useSelector","getNoticesLoading","firstStep","setFirstStep","titleId","useMemo","nanoid","nameId","birthdayId","breedId","locationId","priceId","photoId","commentsId","isDisabled","dirty","errors","undefined","initialValues","addNoticeInitialState","validationSchema","addNoticeSchema","onSubmit","resetForm","newPet","FormData","append","Number","addNotice","error","errorToast","message","successToast","catch","validateOnChange","validateOnBlur","values","autoComplete","encType","control","label","as","color","placeholder","id","width","maxW","display","flexDirection","base","md","justifyContent","controle","onClick","mr","fontSize","fontWeight","lineHeight","letterSpacing","size","borderRadius","plusSize","AddIcon","createIcon","d","displayName","useDisclosure","isOpen","onOpen","isLoggedIn","getIsLoggedIn","maxWidth","xl","mx","flexWrap","gap","ml","to","w","h","alignItems","bgColor","position","top","right","zIndex","textAlign","fontStyle","backgroundColor","_hover","_focus","ModalAddNotice","searchQuery","setSearchQuery","console","log","useLocation","navigate","useNavigate","category","pathname","useEffect","Suspense","fallback"],"sourceRoot":""}