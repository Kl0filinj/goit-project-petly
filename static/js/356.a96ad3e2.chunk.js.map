{"version":3,"file":"static/js/356.a96ad3e2.chunk.js","mappings":"qTAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAAC,IAAD,CACEC,aAAc,SACdC,KAAM,CAACC,GAAI,QAASC,GAAI,QAASC,GAAI,UACrCC,GAAI,OACJC,QAAS,CAAEC,KAAM,EAAGL,GAAI,EAAGE,GAAI,GAC/BI,QAAS,CAACD,KAAM,KAAML,GAAI,QAC1BO,EAAG,EACHC,GAAI,OACJC,GAAI,OARN,SAUGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,IAAlC,OACR,UAAC,KAAD,CACEC,SAAU,WACVC,SAAU,CAACZ,KAAM,QAASJ,GAAI,SAC9BM,EAAG,EACHW,mBAAoB,aACpBC,mBAAoB,QACpBC,yBAA0B,+BAC1BC,QAAS,CACPC,QAAS,MACTN,SAAU,WACVO,IAAK,KACLC,KAAM,IACNC,EAAG,MACHC,EAAG,IACHC,GAAI,sDACJC,aAAc,MAEhBC,OAAQ,CACNC,OAAQ,MAlBZ,WAsBE,SAAC,IAAD,CACEC,UAAW,EACXC,GAAG,KACHC,OAAQ,GACRC,SAAU,MACVC,WAAY,QACZC,cAAc,UANhB,SAQGxB,KAEH,SAAC,IAAD,CACEmB,UAAW,EACX5B,GAAI,IACJ+B,SAAU,KACVC,WAAY,QACZE,SAAU,SACVC,MAAO,UANT,SAQGzB,KAEH,UAAC,KAAD,CACE0B,QAAS,OACTC,eAAe,gBACfC,WAAY,SACZtC,GAAI,CAACE,KAAM,IAAKJ,GAAI,MAJtB,WAME,SAAC,IAAD,CACEiC,SAAU,KACVI,MAAO,wBACPH,WAAY,QAHd,gBAKGrB,QALH,IAKGA,OALH,EAKGA,EAAM4B,MAAM,KAAKC,UAAUC,KAAK,QAEnC,SAAC,IAAD,CACE5B,SAAU,WACVkB,SAAU,KACVC,WAAY,QACZG,MAAO,UACPO,QAAS,cACTb,GAAG,IACHc,KAAM/B,EACNgC,OAAO,SACPC,IAAI,aATN,4BAnCGrC,EArBC,KA0Ef,ECtFasC,EAAO,mCAAG,sGACCC,MAAM,GAAD,OAHb,sDAGa,UADN,cAChBC,EADgB,OAEhBC,EAASD,EAASE,OAFF,kBAGfD,GAHe,2CAAH,qD,UCCRE,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC5B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAaA,OACG,SAAC,KAAD,CACAC,KAAK,OACLC,MAAOH,EACPI,SAfmB,SAAAC,GACrBJ,EAAeI,EAAEf,OAAOa,OACxBL,EAAeO,EAAEf,OAAOa,MACxB,EAaDG,YAVoB,WACnBL,EAAe,IACfH,EAAe,GACf,EAQDtC,SAAU,CAACZ,KAAM,QAASL,GAAI,UAI5B,E,SCwDH,EA1Ea,WACX,OAAwBwD,EAAAA,EAAAA,UAAS,IAAjC,eAAO3D,EAAP,KAAamE,EAAb,KACA,GAAkCR,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,SAG2BjB,IAH3B,OAGUE,EAHV,OAIIiB,EAAWjB,GAJf,gDAMIe,GAAa,GACbG,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdpB,EACD,GAAE,IAEH,IAAMqB,EAAU,mCAAG,WAAMC,GAAN,kFACXf,EAAce,EAAMC,cADT,SAEMxB,IAFN,OAEXE,EAFW,OAGXuB,EAAYvB,EAASwB,QACzB,SAAA9E,GAAI,OACFA,EAAKe,MAAM6D,cAAcG,SAASnB,IAClC5D,EAAKgB,YAAY4D,cAAcG,SAASnB,EAFtC,IAINW,EAAWM,GARM,2CAAH,sDAWVN,EAAa,SAAAS,GACjB,IAAMC,EAAiBD,EAAMnE,KAAI,SAAAb,GAC/B,OAAO,kBAAKA,GAAZ,IAAkBkF,YAAaC,KAAKC,MAAM,IAAID,KAAKnF,EAAKiB,QACzD,IAEKoE,EAAmBJ,EAAeK,MACtC,SAACC,EAAGC,GAAJ,OAAUA,EAAEN,YAAcK,EAAEL,WAA5B,IAGFf,EAAQkB,GACRhB,GAAa,EACd,EAED,OACE,SAAC,KAAD,CAAKrB,QAAS,UAAWnB,EAAG,QAA5B,UACE,SAAC4D,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,CACEvD,GAAG,KACHwD,KAAM,MACNtD,SAAU,CAAC7B,KAAM,MAAOL,GAAI,OAC5ByF,UAAW,SACXC,GAAI,CAACrF,KAAM,IAAKJ,GAAI,MALtB,kBASCgE,GACC,SAAC0B,EAAA,EAAD,KAEA,iCACE,SAACrC,EAAD,CAAYC,eAAgBgB,KAC5B,SAAC3E,EAAD,CAAUC,KAAMA,OAGH,IAAhBA,EAAKoC,SAAiBgC,IACrB,SAAC,IAAD,CAAMwB,UAAU,SAAhB,mFAQX,C","sources":["components/NewsList/NewsList.jsx","pages/News/getNews.js","components/NewsSearch/NewsSearch.jsx","pages/News/News.jsx"],"sourcesContent":["import { Box, SimpleGrid, Heading, Text, Link } from '@chakra-ui/react';\n\nexport const NewsList = ({ news }) => {\n  return (\n    <SimpleGrid\n      justifyItems={'center'}\n      maxW={{md: '704px', lg: '940px', xl: '1240px',}}\n      mt={'60px'}\n      columns={{ base: 1, md: 2, xl: 3 }}\n      spacing={{base: '12', md: '60px'}}\n      p={2}\n      ml={'auto'}\n      mr={'auto'}\n    >\n      {news.map(({ _id, title, description, date, url }) => (\n        <Box\n          position={'relative'}\n          maxWidth={{base: '330px', lg: '394px'}}\n          p={2}\n          transitionProperty={'box-shadow'}\n          transitionDuration={'250ms'}\n          transitionTimingFunction={'cubic-bezier(0.4, 0, 0.2, 1)'}\n          _before={{\n            content: '\" \"',\n            position: 'absolute',\n            top: '-1',\n            left: '0',\n            w: '85%',\n            h: '1',\n            bg: 'linear-gradient(90deg, #FF634E 0%, #FFDF48 105.44%)',\n            borderRadius: '10',\n          }}\n          _hover={{\n            shadow: 'md',\n            }}\n          key={_id}\n        >\n          <Heading\n            noOfLines={2}\n            as=\"h3\"\n            length={60}\n            fontSize={'2xl'}\n            lineHeight={'short'}\n            letterSpacing=\"-0.01em\"\n          >\n            {title}\n          </Heading>\n          <Text\n            noOfLines={5}\n            mt={'4'}\n            fontSize={'md'}\n            lineHeight={'short'}\n            overflow={'hidden'}\n            color={'#111321'}\n          >\n            {description}\n          </Text>\n          <Box\n            display={'flex'}\n            justifyContent=\"space-between\"\n            alignItems={'center'}\n            mt={{base: '5', lg: '10'}}\n          >\n            <Text\n              fontSize={'md'}\n              color={'rgba(17, 17, 17, 0.6)'}\n              lineHeight={'short'}\n            >\n              {date?.split(\"-\").reverse().join(\"/\")}\n            </Text>\n            <Link\n              position={'relative'}\n              fontSize={'md'}\n              lineHeight={'short'}\n              color={'#F59256'}\n              bgColor={'transparent'}\n              as=\"a\"\n              href={url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Read more\n            </Link>\n          </Box>\n        </Box>\n      ))}\n    </SimpleGrid>\n  );\n};\n","const BASE_URL = \"https://goit-project-petly-backend.onrender.com/api\";\n\t\n\texport const getNews = async () => {\n\t\tconst response = await fetch(`${BASE_URL}/news`);\n\t\tconst result = response.json();\n\t\treturn result;\n\t};\n\n","import { useState } from \"react\";\nimport { FilterInput } from \"shared/components\";\n\nexport const NewsSearch = ({ searchFunction }) => {\n\tconst [searchQuery, setSearchQuery] = useState('');\n\n\tconst searchHandler = e => {\n\t\tsetSearchQuery(e.target.value);\n\t\tsearchFunction(e.target.value);\n\t}\n\n\n\tconst removeQuery = () => {\n\t\tsetSearchQuery(\"\")\n\t\tsearchFunction(\"\");\n\t}\n\n\treturn (\n    <FilterInput\n    type=\"text\"  \n    value={searchQuery} \n    onChange={searchHandler}\n\thandleClear={removeQuery}\n\tmaxWidth={{base: '280px', md: '608px'}}\n\t/>\n\t\n    )\n  }","import { useState, useEffect } from 'react';\nimport { Box, Heading, Text } from '@chakra-ui/react';\nimport Container from '../../shared/components/Box/Container';\nimport Section from '../../shared/components/Box/Section';\nimport { NewsList } from 'components/NewsList/NewsList';\nimport { getNews } from './getNews';\nimport { NewsSearch } from 'components/NewsSearch/NewsSearch';\nimport Loader from 'components/Loader/Loader';\n\nconst News = () => {\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getNews();\n        sortByDate(response);\n      } catch (error) {\n        setIsLoading(false);\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n\n  const searchNews = async query => {\n    const searchQuery = query.toLowerCase();\n    const response = await getNews();\n    const foundNews = response.filter(\n      news =>\n        news.title.toLowerCase().includes(searchQuery) ||\n        news.description.toLowerCase().includes(searchQuery)\n    );\n    sortByDate(foundNews);\n  };\n\n  const sortByDate = array => {\n    const addDateForSort = array.map(news => {\n      return { ...news, dateForSort: Date.parse(new Date(news.date)) };\n    });\n\n    const sortedByDateNews = addDateForSort.sort(\n      (a, b) => b.dateForSort - a.dateForSort\n    );\n\n    setNews(sortedByDateNews);\n    setIsLoading(false);\n  };\n\n  return (\n    <Box bgColor={'#FDF7F2'} h={'100vh'}>\n      <Container>\n        <Section>\n          <Heading\n            as=\"h2\"\n            size={'3xl'}\n            fontSize={{base: '2xl', md: '5xl'}}\n            textAlign={'center'}\n            mb={{base: '7', lg: '10'}}\n          >\n            News\n          </Heading>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <NewsSearch searchFunction={searchNews} />\n              <NewsList news={news} />\n            </>\n          )}\n          {news.length === 0 && !isLoading && (\n            <Text textAlign=\"center\">\n              There are not news according to your request. Please try again.\n            </Text>\n          )}\n        </Section>\n      </Container>\n    </Box>\n  );\n};\n\nexport default News;\n"],"names":["NewsList","news","justifyItems","maxW","md","lg","xl","mt","columns","base","spacing","p","ml","mr","map","_id","title","description","date","url","position","maxWidth","transitionProperty","transitionDuration","transitionTimingFunction","_before","content","top","left","w","h","bg","borderRadius","_hover","shadow","noOfLines","as","length","fontSize","lineHeight","letterSpacing","overflow","color","display","justifyContent","alignItems","split","reverse","join","bgColor","href","target","rel","getNews","fetch","response","result","json","NewsSearch","searchFunction","useState","searchQuery","setSearchQuery","type","value","onChange","e","handleClear","setNews","isLoading","setIsLoading","useEffect","sortByDate","console","log","searchNews","query","toLowerCase","foundNews","filter","includes","array","addDateForSort","dateForSort","Date","parse","sortedByDateNews","sort","a","b","Container","Section","size","textAlign","mb","Loader"],"sourceRoot":""}