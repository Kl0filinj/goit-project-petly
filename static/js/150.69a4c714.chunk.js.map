{"version":3,"file":"static/js/150.69a4c714.chunk.js","mappings":"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","sources":["components/ModalNotice/akar-icons_heart.svg","components/NoticesSearch/NoticesSearch.jsx","components/ModalAddNotice/addNoticeInitialState.js","components/ModalAddNotice/addNoticeSchema.js","components/ModalAddNotice/ModalAddNotice.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticesCategoryItem/NoticesCategoryItem.jsx","components/NoticesCategoriesList/NoticesCategoriesList.jsx","components/AddNoticeButton/AddNoticeButton.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAkarIconsHeart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 16,\n    viewBox: \"0 0 17 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_332_1539)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    transform: \"translate(0.5)\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.16666 2C3.32599 2 1.83333 3.47733 1.83333 5.3C1.83333 6.77133 2.41666 10.2633 8.15866 13.7933C8.26152 13.8559 8.3796 13.889 8.5 13.889C8.62039 13.889 8.73847 13.8559 8.84133 13.7933C14.5833 10.2633 15.1667 6.77133 15.1667 5.3C15.1667 3.47733 13.674 2 11.8333 2C9.99266 2 8.5 4 8.5 4C8.5 4 7.00733 2 5.16666 2Z\",\n    fill: \"#F59256\",\n    stroke: \"#F59256\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_332_1539\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    transform: \"translate(0.5)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAkarIconsHeart);\nexport default __webpack_public_path__ + \"static/media/akar-icons_heart.ea665c85a6c4b919e3ff4afb2c498fcb.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { FilterInput } from 'shared/components';\n// import { CloseIcon, Search2Icon } from '@chakra-ui/icons';\n// import { Box } from '@chakra-ui/react';\n\nconst NoticesSearch = onSubmit => {\n  const [query, setQuery] = useState('');\n  const [\n    // filteredData,\n    setFilteredData,\n  ] = useState([]);\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    setFilteredData(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('What pet do you need?');\n      return;\n    }\n    onSubmit(query);\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n  };\n\n  return (\n    <FilterInput\n      name={'search'}\n      onChange={handleChange}\n      handleSearch={handleSubmit}\n      handleClear={clearInput}\n      value={query}\n      mb={'28px'}\n    />\n    // <Box>\n    //   <Box onSubmit={handleSubmit}>\n    //     <Box\n    //       type=\"text\"\n    //       name=\"input\"\n    //       autocomplete=\"off\"\n    //       placeholder=\"Search\"\n    //       onChange={handleChange}\n    //       value={filteredData}\n    //     />\n    //     <Box type=\"submit\">\n    //       {filteredData.length === 0 ? (\n    //         <Search2Icon />\n    //       ) : (\n    //         <CloseIcon onClick={clearInput} />\n    //       )}\n    //     </Box>\n    //   </Box>\n    // </Box>\n  );\n};\n\n// NoticesSearch.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nexport default NoticesSearch;\n","const addNoticeInitialState = {\n    category: 'lost-found',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: 'male',\n    location: '',\n    price: '',\n    photo: '',\n    comments: '',\n}\n\nexport default addNoticeInitialState","import * as yup from 'yup';\n\nconst addNoticeSchema = yup.object().shape({\n    category: yup.string().required(\"Required\"),\n    title: yup.string().required(\"Required\"),\n    name: yup.string().required(\"Required\"),\n    birthday: yup.string().required(\"Required\"),\n    breed: yup.string().required(\"Required\"),\n    sex: yup.string().required(\"Required\"),\n    location: yup.string().required(\"Required\"),\n    price: yup.string().required(\"Required\"),\n    photo: yup.string().required(\"Required\"),\n    comments: yup.string(),\n});\n\nexport default addNoticeSchema","import { Formik, Form } from \"formik\"\nimport { useMemo, useState } from \"react\"\nimport { nanoid } from \"nanoid\"\nimport { Text, Box } from \"@chakra-ui/react\"\nimport { FormikControl, Button } from \"shared/components\"\nimport { addNoticeInitialState, addNoticeSchema } from \"./index\"\n\nconst ModalAddsNotice = ({onClose}) => {\n    const titleId = useMemo(()=> nanoid(), [])\n    const nameId = useMemo(()=> nanoid(), [])\n    const birthdayId = useMemo(()=> nanoid(), [])\n    const breedId = useMemo(()=> nanoid(), [])\n    const locationId = useMemo(()=> nanoid(), [])\n    const priceId = useMemo(()=> nanoid(), [])\n    const photoId = useMemo(()=> nanoid(), [])\n    const commentsId = useMemo(()=> nanoid(), [])\n\n    const [firstStep, setFirstStep] = useState(true)\n\n    const handleSubmit = ({category, title, name, birthday, breed, sex, location, price, photo, comments}, {resetForm}) => {\n        const newPet = {\n            category,\n            title: title.trim(),\n            name: name.trim(),\n            birthday,\n            breed,\n            sex,\n            location,\n            price,\n            photo,\n            comments\n        }\n        console.log(newPet)\n        resetForm()\n    }\n\n    return (\n        <Formik initialValues={addNoticeInitialState}\n                validationSchema={addNoticeSchema}\n                onSubmit={handleSubmit}\n                validateOnChange={false}\n                validateOnBlur={true}>\n                {({form}) => (\n                    <Form autoComplete='off'>\n                        {firstStep\n                            ?   <>\n                                    <FormikControl\n                                        control='category-radio'\n                                        name='category'\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='title'\n                                        label='Title of ad*'\n                                        placeholder='Type title'\n                                        id={titleId}\n                                        width={'240px'}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='name'\n                                        label='Name pet'\n                                        placeholder='Type name pet'\n                                        id={nameId}\n                                        width={'240px'}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='birthday'\n                                        label='Date of birthday'\n                                        placeholder='Type date of birthday'\n                                        id={birthdayId}\n                                        width={'240px'}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='breed'\n                                        label='Breed'\n                                        placeholder='Type breed'\n                                        id={breedId}\n                                        width={'240px'}\n                                        mb={'40px'}\n                                    />\n                                    <Box    \n                                        maxW={'none'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            controle='secondary'\n                                            onClick={()=>setFirstStep(false)}\n                                            mb={{base:'12px', md:'0'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Next\n                                        </Button>\n                                        <Button\n                                            onClick={onClose}\n                                            mr={{md:'20px'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Box>\n                                </>\n                            :   <Box \n                                    display={'flex'}\n                                    flexDirection={'column'}\n                                    maxW={'none'}\n                                >  \n                                    <FormikControl\n                                        control='sex-radio'\n                                        name='sex'\n                                        label='The sex*:'\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='location'\n                                        label='Location*:'\n                                        placeholder='Type location'\n                                        id={locationId}\n                                        width={'240px'}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='price'\n                                        label='Price*:'\n                                        placeholder='Type price'\n                                        id={priceId}\n                                        width={'240px'}\n                                    />\n                                    <Text\n                                        fontSize={{base:'16px', md:'20px'}}\n                                        fontWeight={'500'}\n                                        lineHeight={{base:'short', md:'1.2'}}\n                                        letterSpacing={'-0.01em'}\n                                        mb={'20px'}    \n                                    >\n                                        Load the pet`s image\n                                    </Text>\n                                    <FormikControl\n                                        control=\"file\"\n                                        name='photo'\n                                        id={photoId}\n                                        size={'116px'}\n                                        borderRadius={'20px'}\n                                    />\n                                    <FormikControl\n                                        control=\"textarea\"\n                                        name='comments'\n                                        label='Comments'\n                                        placeholder='Type comments'\n                                        id={commentsId}\n                                    />\n                                    <Box\n                                        maxW={'none'}\n                                        width={'100%'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            type='submit'\n                                            mb={{base:'12px', md:'0'}}\n                                            controle='secondary'\n                                            width={{md:'180px'}}\n                                        >\n                                            Done\n                                        </Button>\n                                        <Button\n                                            onClick={()=>setFirstStep(true)}\n                                            mr={{md:'20px'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Back\n                                        </Button>\n                                    </Box>\n                                </Box>\n                        }\n                        \n                    </Form>\n                )}\n        </Formik>\n)}\n\nexport default ModalAddsNotice","import { Outlet } from 'react-router-dom'\nimport { FilterLink, AddPetButton, Modal } from 'shared/components'\nimport { Box, useDisclosure } from '@chakra-ui/react'\nimport { ModalAddNotice } from 'components/ModalAddNotice'\n\nconst NoticesCategoriesNav = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  return (\n    <Box maxWidth={{base:'280px', md:'704px', xl: '1248px'}} mx={'auto'}>\n        <Box mb={{base:'30px', md:'60px'}} display={\"flex\"}>\n          <Box\n            as={'nav'}\n            maxW={{base:'280px', md:'474px', xl: '802px'}}\n            display={'flex'}\n            flexWrap={'wrap'}\n            gap={{base:'12px', md:'16px 12px', xl: '12px'}}\n            mr={'auto'}\n            ml={{base:'auto', md:'0'}}>\n              <FilterLink to={\"lost-found\"}>lost/found</FilterLink>\n              <FilterLink to={\"free\"}>in good hand</FilterLink>\n              <FilterLink to={\"sell\"}>sell</FilterLink>\n              <FilterLink to={\"favorite\"}>favorite ads</FilterLink>\n              <FilterLink to={\"own\"}>my ads</FilterLink>\n          </Box>\n          <AddPetButton\n            onClick={onOpen}\n            size={{base:'80px', md:'44px'}}\n            position={{base:'fixed', md:'static'}}\n            top={'455px'}\n            right={'20px'}\n            zIndex={'2'}\n            />\n          <Modal\n            isOpen={isOpen}\n            onClose={onClose}\n            title={'Add pet'}\n          >\n            <ModalAddNotice onClose={onClose}/>\n          </Modal>\n        </Box>\n        <Outlet />\n    </Box>\n  )\n}\n\nexport default NoticesCategoriesNav","import React from 'react';\nimport { ReactComponent as HeartIcon } from '../ModalNotice/akar-icons_heart.svg';\nimport petTemlate from '../ModalNotice/no_img.jpg';\nimport { Button } from '../../shared/components';\n//import { Container } from '../../shared/components/Box';\nimport {\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Image,\n  List,\n  ListItem,\n  Text,\n  FormLabel,\n  Link,\n  Box,\n  Modal,\n} from '@chakra-ui/react';\n\nconst pets = {\n  owner: {\n    email: 'test@gmail.com',\n    phone: '+380123456789',\n  },\n  _id: '63836ccf17d61119e7b318d2',\n  category: 'In good hands',\n  title: 'Super golden retriever',\n  name: 'Bred',\n  birthdate: '20.10.2022',\n  breed: 'Golden retriever',\n  sex: 'male',\n  location: 'Kiev, Ukraine',\n  price: null,\n  avatarURL:\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjI80NrzAYuiUgBDcg8wkGbPbZOxfHF7540w&s',\n  comments:\n    'Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur  Lorem ipsum dolor sit amet, consectetur Lorem.',\n};\nconst receivedItem = {\n  favorite: null,\n};\n\nfunction ModalNotice({ open, handleClose, Data }) {\n  //   const {\n  //     title,\n  //     avatarURL,\n  //     birthdate,\n  //     breed,\n  //     category,\n  //     comments,\n  //     location,\n  //     name,\n  //     owner,\n  //     price,\n  //     sex,\n  //   } = Data;\n\n  const { title, children, ...rest } = useDisclosure();\n  return (\n    <>\n      <Modal isOpen={open} onClose={handleClose}>\n        <ModalOverlay bg=\"rgba(17, 17, 17, 0.6);\" />\n        <ModalContent\n          w={['280px', null, '280px', '704px']}\n          maxW={'none'}\n          px={['20px', null, '20px', '20px']}\n          py={'32px'}\n          borderRadius={['20px', null, '20px', '40px']}\n          {...rest}\n        >\n          {title && (\n            <ModalHeader\n              mx={'auto'}\n              mb={['20px', null, '20px', '40px']}\n              p={'0'}\n              fontSize={['2xl', null, '2xl', '4xl']}\n              fontWeight={'500'}\n              lineHeight={'short'}\n              color={'#111111'}\n            >\n              {title}\n            </ModalHeader>\n          )}\n          <Box bg=\"#ffffff\" position=\"relative\">\n            <Box\n              display={[null, null, null, 'grid']}\n              gridTemplateColumns=\"288px 356px\"\n              gap=\"20px\"\n              marginBottom=\"28px\"\n            >\n              <Box\n                position=\"relative\"\n                width={[null, null, '240px', '288px']}\n                height={[null, null, '240px', '328px']}\n                border-radius=\"0px 0px 40px 40px\"\n                overflow=\"hidden\"\n              >\n                <Image\n                  objectFit=\"cover\"\n                  borderRadius=\"0px 0px 40px 40px\"\n                  w=\"100%\"\n                  h=\"100%\"\n                  src={pets.avatarURL || petTemlate}\n                  alt={pets.breed}\n                  onError={e => {\n                    e.target.src = petTemlate;\n                  }}\n                />\n                <Text\n                  position=\"absolute\"\n                  top=\"20px\"\n                  left=\"0\"\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  minHeight=\"28px\"\n                  minWidth=\"158px\"\n                  paddingLeft=\"20px\"\n                  fontSize=\"12px\"\n                  lineHeight=\"1.36\"\n                  letterSpacing=\"0.04em\"\n                  borderTopRightRadius=\"20px\"\n                  borderBottomRightRadius=\"20px\"\n                  bg=\"rgba(255, 255, 255, 0.6)\"\n                >\n                  {pets.category.split('-').join(' ')}\n                </Text>\n              </Box>\n\n              <Box>\n                <Text\n                  marginBottom=\"16px\"\n                  fontWeight=\"700\"\n                  fontSize=\"28px\"\n                  lineHeight=\"1.36\"\n                  letterSpacing=\"-0.01em\"\n                >\n                  {pets.title}\n                </Text>\n                <List\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  marginBottom=\"28px\"\n                  _notLast={{ marginBottom: '0px' }}\n                >\n                  <ListItem\n                    minWidth=\"118px\"\n                    fontWeight=\"600\"\n                    fontSize=\"16px\"\n                    lineHeight=\"1.36\"\n                    m=\"0\"\n                  >\n                    <FormLabel\n                      minWidth=\"118px\"\n                      fontWeight=\"600\"\n                      fontSize=\"16px\"\n                      lineHeight=\"1.36\"\n                      m=\"0\"\n                    >\n                      Name:\n                    </FormLabel>\n                    <Text fontSize=\"16px\" lineHeight=\"1.36\" color=\"#000000\">\n                      {pets.name ? pets.name : '-'}\n                    </Text>\n                  </ListItem>\n                  <ListItem display=\"flex\" _notLast={{ marginBottom: '8px' }}>\n                    <FormLabel\n                      minWidth=\"118px\"\n                      fontWeight=\"600\"\n                      fontSize=\"16px\"\n                      lineHeight=\"1.36\"\n                      m=\"0\"\n                    >\n                      Birthday:\n                    </FormLabel>\n                    <Text fontSize=\"16px\" lineHeight=\"1.36\" color=\"#000000\">\n                      {pets.birthdate ? pets.birthdate : '-'}\n                    </Text>\n                  </ListItem>\n                  <ListItem display=\"flex\" _notLast={{ marginBottom: '8px' }}>\n                    <FormLabel\n                      minWidth=\"118px\"\n                      fontWeight=\"600\"\n                      fontSize=\"16px\"\n                      lineHeight=\"1.36\"\n                      m=\"0\"\n                    >\n                      Breed:\n                    </FormLabel>\n                    <Text fontSize=\"16px\" lineHeight=\"1.36\" color=\"#000000\">\n                      {pets.breed ? pets.breed : '-'}\n                    </Text>\n                  </ListItem>\n                  <ListItem display=\"flex\" _notLast={{ marginBottom: '8px' }}>\n                    <FormLabel\n                      minWidth=\"118px\"\n                      fontWeight=\"600\"\n                      fontSize=\"16px\"\n                      lineHeight=\"1.36\"\n                      m=\"0\"\n                    >\n                      Loсation:\n                    </FormLabel>\n                    <Text fontSize=\"16px\" lineHeight=\"1.36\" color=\"#000000\">\n                      {pets.location}\n                    </Text>\n                  </ListItem>\n                  <ListItem display=\"flex\" _notLast={{ marginBottom: '8px' }}>\n                    <FormLabel\n                      minWidth=\"118px\"\n                      fontWeight=\"600\"\n                      fontSize=\"16px\"\n                      lineHeight=\"1.36\"\n                      m=\"0\"\n                    >\n                      The sex:\n                    </FormLabel>\n                    <Text fontSize=\"16px\" lineHeight=\"1.36\" color=\"#000000\">\n                      {pets.sex}\n                    </Text>\n                  </ListItem>\n                  {pets.owner && (\n                    <>\n                      <ListItem\n                        display=\"flex\"\n                        _notLast={{ marginBottom: '8px' }}\n                      >\n                        <FormLabel\n                          minWidth=\"118px\"\n                          fontWeight=\"600\"\n                          fontSize=\"16px\"\n                          lineHeight=\"1.36\"\n                          m=\"0\"\n                        >\n                          Email:\n                        </FormLabel>\n                        <Link href={`mailto: ${pets.owner?.email}`}>\n                          {pets.owner?.email}\n                        </Link>\n                      </ListItem>\n                      <ListItem\n                        display=\"flex\"\n                        _notLast={{ marginBottom: '8px' }}\n                      >\n                        <FormLabel\n                          minWidth=\"118px\"\n                          fontWeight=\"600\"\n                          fontSize=\"16px\"\n                          lineHeight=\"1.36\"\n                          m=\"0\"\n                        >\n                          Phone:\n                        </FormLabel>\n                        <Link href={`tel: ${pets.owner?.phone}`}>\n                          {pets.owner?.phone}\n                        </Link>\n                      </ListItem>\n                    </>\n                  )}\n                  {pets.price && (\n                    <ListItem display=\"flex\" _notLast={{ marginBottom: '8px' }}>\n                      <FormLabel\n                        minWidth=\"118px\"\n                        fontWeight=\"600\"\n                        fontSize=\"16px\"\n                        lineHeight=\"1.36\"\n                        m=\"0\"\n                      >\n                        Price:\n                      </FormLabel>\n                      <Text>{pets.price} $</Text>\n                    </ListItem>\n                  )}\n                </List>\n              </Box>\n            </Box>\n\n            <Text>\n              <b>Comments:</b> {pets.comments}\n            </Text>\n\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-start\"\n              flexWrap={['34px', null, 'wrap', 'nowrap']}\n              paddingRight=\"20px\"\n              marginTop={[null, null, '40px', '32px']}\n              flexDirection=\"row-reverse\"\n            >\n              <Link\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                width={[null, null, '100%', '160px']}\n                height={[10, null, 10, null, 10]}\n                marginBottom={[null, null, '12px', '0px']}\n                fontSize=\"16px\"\n                lineHeight=\"1.375\"\n                letterSpacing=\"0.04em\"\n                cursor=\"pointer\"\n                color=\"#ffffff\"\n                textAlign=\"center\"\n                backgroundColor=\"#F59256\"\n                borderRadius=\"40px\"\n                _hover={{\n                  backgroundColor: '#FF6101',\n                }}\n                _focus={{\n                  backgroundColor: '#FF6101',\n                }}\n                href={`tel: ${pets.owner?.phone}`}\n              >\n                Contact\n              </Link>\n              <Button\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                width={[null, null, '100%', '160px']}\n                height={[10, null, 10, null, 10]}\n                marginRight={[null, null, '0px', '12px']}\n                fontSize=\"16px\"\n                lineHeight=\"1.375\"\n                letterSpacing=\"0.04em\"\n                cursor=\"pointer\"\n                borderRadius=\"40px\"\n                _hover={{ borderColor: '#FF6101' }}\n                _focus={{ borderColor: '#FF6101' }}\n                rightIcon={<HeartIcon />}\n                variant=\"solid\"\n              >\n                {!receivedItem.favorite ? 'Add to' : 'Remove from'}\n              </Button>\n            </Box>\n          </Box>\n          <ModalCloseButton\n            width={['34px', null, '34px', '44px']}\n            height={['34px', null, '34px', '44px']}\n            top={'20px'}\n            right={'20px'}\n            bg={'#FDF7F2'}\n            borderRadius={'50%'}\n          />\n          <ModalBody p={'0'}>{children}</ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalNotice;\n","import React, { useState } from 'react';\nimport {\n  Text,\n  Box,\n  Image,\n  Card,\n  CardBody,\n  Heading,\n  CardFooter,\n} from '@chakra-ui/react';\nimport { CardButton, FavoriteButton } from 'shared/components';\nimport ModalNotice from '../ModalNotice/ModalNotice';\n\nconst NoticesCategoryItem = ({\n  id,\n  avatar,\n  favorite,\n  title,\n  breed,\n  location,\n  age,\n  price,\n  condition,\n  onDeletePets,\n  onLearnMore,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Card\n      as={'li'}\n      width={'100%'}\n      boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n      borderBottomRadius={'20px'}\n    >\n      <CardBody p={'0'} mb={price || favorite ? '0' : '30px'}>\n        <Box position={'relative'}>\n          <Image src={avatar} alt={breed} width={'100%'} height={'288px'} />\n          <Box\n            as={'span'}\n            position={'absolute'}\n            top={'20px'}\n            display={'inline-flex'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            w={'158px'}\n            h={'28px'}\n            px={'20px'}\n            py={'6px'}\n            borderRightRadius={'20px'}\n            color={'#111111'}\n            fontSize={'xs'}\n            fontWeight={'medium'}\n            lineHeight={'xl'}\n            letterSpacing={'0.04em'}\n            backgroundColor={'rgba(255, 255, 255, 0.6)'}\n            backdropFilter={'blur(2px)'}\n          >\n            {condition}\n          </Box>\n          <FavoriteButton />\n        </Box>\n        <Box p={'20px'}>\n          <Heading\n            mb={'20px'}\n            color={'#111111'}\n            fontSize={'28px'}\n            fontWeight={'bold'}\n            lineHeight={'short'}\n            letterSpacing={'-0.01em'}\n          >\n            {title}\n          </Heading>\n          <Text\n            mb={'8px'}\n            fontSize={'16px'}\n            fontWeight={'medium'}\n            lineHeight={'short'}\n            color={'#111111'}\n          >\n            Breed: {breed}\n          </Text>\n          <Text\n            mb={'8px'}\n            fontSize={'16px'}\n            fontWeight={'medium'}\n            lineHeight={'short'}\n            color={'#111111'}\n          >\n            Location: {location}\n          </Text>\n          <Text\n            mb={price && '8px'}\n            fontSize={'16px'}\n            fontWeight={'medium'}\n            lineHeight={'short'}\n            color={'#111111'}\n          >\n            Age: {age}\n          </Text>\n          {price && (\n            <Text\n              mb={price && '8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}\n            >\n              Price: {price}\n            </Text>\n          )}\n        </Box>\n      </CardBody>\n      <CardFooter\n        pt={'0'}\n        px={'16px'}\n        pb={!favorite ? '32px' : '16px'}\n        width={'100%'}\n        display={'flex'}\n        alignItems={'center'}\n        flexDirection={'column'}\n      >\n        {/* <CardButton\n          type=\"submit\"\n          onClick={() => onLearnMore(id)}\n          mb={favorite && '12px'}\n        >\n          Learn more\n        </CardButton> */}\n\n        <CardButton onClick={handleOpen} modalButton>\n          Learn more\n        </CardButton>\n\n        <ModalNotice open={open} handleClose={handleClose} />\n\n        {favorite && (\n          <CardButton\n            mt={favorite && '12px'}\n            type=\"submit\"\n            onClick={() => onDeletePets(id)}\n            controle=\"delete\"\n          >\n            Delete\n          </CardButton>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default NoticesCategoryItem;\n","import React from 'react';\nimport { useEffect, useState} from 'react'\nimport NoticesCategoryItem from '../NoticesCategoryItem/NoticesCategoryItem'\nimport { SimpleGrid } from '@chakra-ui/react';\nimport {default as userPets} from './ListTest.json'\nimport getNoticesByCategory from 'components/NoticesCategoryItem/NoticesCategoryItem'\nimport {Spinner} from '@chakra-ui/react';\n\n\nconst NoticesCategoriesList = ({query}) => {\n  const [pets, setPets] = useState([])\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let filteredPets = pets;\n\n  if (query !== \"\") {\n    filteredPets = pets.filter(({ title }) => {\n      return title.toLowerCase().includes(query.toLowerCase())\n    })\n  }\n  useEffect(() => {\n    const fetchPets = async () => {\n      setLoading(true);\n\n      try {\n        const data = await getNoticesByCategory();\n        setPets((prevPets) => [...prevPets, ...data]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPets();\n  }, []);\n\n  // const filterPets = userPets.filter(pets => pets.condition === condition);\n  return (\n    <>\n    { filteredPets && (\n      <SimpleGrid\n      as='ul'\n      mx={'auto'}\n      maxWidth={{base:'280px', md:'704px', xl: '1248px'}}\n      gridTemplateColumns={{base:'1fr', md:'1fr 1fr', xl: '1fr 1fr 1fr 1fr'}}\n      gap={'32px'}\n      width={'full'}\n      listStyleType={'none'}\n      key={userPets.id}>\n        {userPets.map(\n          ({ id, favorite, avatar, title, breed, location, age, condition, price }) => (\n            <NoticesCategoryItem\n              key={id}\n              avatar={avatar}\n              favorite={favorite}\n              title={title}\n              breed={breed}\n              location={location}\n              age={age}\n              price={price}\n              condition={condition}\n            />\n          )\n        )}\n    </SimpleGrid>\n    )}\n    {error && <p>Something went wrong</p>}\n    {loading && <Spinner/>}\n    </>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import { Button, ButtonGroup, IconButton } from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons'\nimport {React, useState} from 'react';\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors'\nimport { ToastContainer, toast } from 'react-toastify';\nimport ModalAddNotice from \"components/ModalAddNotice/ModalAddNotice\"\n\nconst AddNoticeButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n    toast(\"Please log in!\")}\n    setShowModal(true);\n  }\n\n\n  return (\n    <>\n    <ButtonGroup size='sm' isAttached variant='outline'>\n      <Button type=\"button\" onClick={handleClick}>Add pet</Button>\n        <IconButton aria-label='Add to friends' onClick={handleClick} icon={<AddIcon />} />\n    </ButtonGroup>\n    <ToastContainer />\n    {showModal && (\n      <ModalAddNotice \n      setShowModal={setShowModal}\n      />\n    )}\n    </>\n  );\n};\n\nexport default AddNoticeButton;\n","import { Suspense, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\n// import NoticesCategoryItem from \"components/NoticesCategoryItem/NoticesCategoryItem\";\nimport AddNoticeButton from 'components/AddNoticeButton/AddNoticeButton';\nimport { Container, Section } from 'shared/components';\nimport { Heading } from '@chakra-ui/react';\n\nconst Notices = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const { categoryName } = useParams();\n  return (\n    <>\n      <Container>\n        <Section>\n          <Heading\n            as={'h1'}\n            fontSize={{ base: '24px', md: '48px' }}\n            fontWeight={'bold'}\n            lineHeight={'short'}\n            textAlign={'center'}\n            mb={7}\n          >\n            Find your favorite pet\n          </Heading>\n          <NoticesSearch setSearchQuery={setSearchQuery} />\n          <NoticesCategoriesNav />\n          <AddNoticeButton />\n          <NoticesCategoriesList\n            category={categoryName}\n            searchQuery={searchQuery}\n          />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default Notices;\n"],"names":["_g","_defs","onSubmit","useState","query","setQuery","setFilteredData","name","onChange","e","target","value","toLowerCase","handleSearch","preventDefault","trim","alert","handleClear","mb","category","title","birthday","breed","sex","location","price","photo","comments","yup","shape","required","onClose","titleId","useMemo","nanoid","nameId","birthdayId","breedId","locationId","priceId","photoId","commentsId","firstStep","setFirstStep","initialValues","addNoticeInitialState","validationSchema","addNoticeSchema","resetForm","newPet","console","log","validateOnChange","validateOnBlur","form","autoComplete","control","type","label","placeholder","id","width","maxW","display","flexDirection","base","md","justifyContent","controle","onClick","mr","fontSize","fontWeight","lineHeight","letterSpacing","size","borderRadius","useDisclosure","isOpen","onOpen","maxWidth","xl","mx","as","flexWrap","gap","ml","to","position","top","right","zIndex","ModalAddNotice","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAkarIconsHeart","_ref","svgRef","props","height","viewBox","fill","xmlns","ref","clipPath","transform","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","pets","owner","email","phone","_id","birthdate","avatarURL","receivedItem","open","handleClose","Data","children","rest","bg","w","px","py","p","color","gridTemplateColumns","marginBottom","overflow","objectFit","h","src","petTemlate","alt","onError","left","alignItems","minHeight","minWidth","paddingLeft","borderTopRightRadius","borderBottomRightRadius","split","join","_notLast","m","href","paddingRight","marginTop","cursor","textAlign","backgroundColor","_hover","_focus","marginRight","borderColor","rightIcon","variant","avatar","favorite","age","condition","onDeletePets","onLearnMore","setOpen","boxShadow","borderBottomRadius","borderRightRadius","backdropFilter","pt","pb","modalButton","mt","setPets","loading","setLoading","error","setError","filteredPets","filter","includes","useEffect","fetchPets","getNoticesByCategory","data","prevPets","listStyleType","userPets","showModal","setShowModal","isLoggedIn","useSelector","getIsLoggedIn","handleClick","toast","isAttached","icon","searchQuery","setSearchQuery","categoryName","useParams","Suspense","fallback"],"sourceRoot":""}