{"version":3,"file":"static/js/859.2cb3bc5e.chunk.js","mappings":"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","sources":["components/ModalAddNotice/ModalAddNotice.jsx","components/ModalAddNotice/addNoticeInitialState.js","components/ModalAddNotice/addNoticeSchema.js","pages/Home/Home.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\"\nimport { useMemo, useState } from \"react\"\nimport { nanoid } from \"nanoid\"\nimport moment from \"moment/moment\"\nimport { Text, Box } from \"@chakra-ui/react\"\nimport { FormikControl, Button } from \"shared/components\"\nimport { addNoticeInitialState, addNoticeSchema } from \"./index\"\n\nconst ModalAddsNotice = ({onClose}) => {\n    const titleId = useMemo(()=> nanoid(), [])\n    const nameId = useMemo(()=> nanoid(), [])\n    const birthdayId = useMemo(()=> nanoid(), [])\n    const breedId = useMemo(()=> nanoid(), [])\n    const locationId = useMemo(()=> nanoid(), [])\n    const priceId = useMemo(()=> nanoid(), [])\n    const photoId = useMemo(()=> nanoid(), [])\n    const commentsId = useMemo(()=> nanoid(), [])\n\n    function isDisabled(dirty, errors) {\n        const {title, name, birthday, breed} = errors\n        return !dirty || title !== undefined || name !== undefined || birthday !== undefined || breed !== undefined\n    }\n    \n    const [firstStep, setFirstStep] = useState(true)\n\n    const handleSubmit = ({categoryName, title, name, birthday, breed, sex, location, price, photo, comments}, {resetForm}) => {\n        const newPet = {\n            categoryName,\n            title: title.trim(),\n            name: name.trim(),\n            birthday: moment(birthday, \"YYYYY-MM-DD\").format('DD.MM.YYYY'),\n            breed: breed.trim(),\n            sex,\n            location: location.trim(),\n            price: Number(price),\n            photo,\n            comments: comments.trim()\n        }\n        console.log(newPet)\n        resetForm()\n    }\n\n    return (\n        <Formik initialValues={addNoticeInitialState}\n                validationSchema={addNoticeSchema}\n                onSubmit={handleSubmit}\n                validateOnChange={true}\n                validateOnBlur={true}>\n                {({values, errors, dirty}) => (\n                    <Form autoComplete='off' encType=\"multipart/form-data\">\n                        {firstStep\n                            ?   <>\n                                    <FormikControl\n                                        control='category-radio'\n                                        name='categoryName'\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='title'\n                                        label={<>Title of ad<Text color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type title'\n                                        id={titleId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='name'\n                                        label='Name pet'\n                                        placeholder='Type name pet'\n                                        id={nameId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='date'\n                                        name='birthday'\n                                        label='Date of birthday'\n                                        id={birthdayId}\n                                        width={60}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='breed'\n                                        label='Breed'\n                                        placeholder='Type breed'\n                                        id={breedId}\n                                        width={60}\n                                        mb={'40px'}\n                                    />\n                                    <Box    \n                                        maxW={'none'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            controle='secondary'\n                                            onClick={()=>setFirstStep(false)}\n                                            isDisabled={isDisabled(dirty, errors)} \n                                            mb={{base:'3', md:'0'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Next\n                                        </Button>\n                                        <Button\n                                            onClick={onClose}\n                                            mr={{md:'5'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Box>\n                                </>\n                            :   <Box \n                                    display={'flex'}\n                                    flexDirection={'column'}\n                                    maxW={'none'}\n                                >  \n                                    <FormikControl\n                                        control='sex-radio'\n                                        name='sex'\n                                        label={<>The sex<Text color={'accent.accentOrange'}>*</Text></>}\n                                    />\n                                    <FormikControl\n                                        type='text'\n                                        name='location'\n                                        label={<>Location<Text color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type location'\n                                        id={locationId}\n                                        width={'60'}\n                                    />\n                                    {(values.categoryName === 'sell') && <FormikControl\n                                                                        type='text'\n                                                                        name='price'\n                                                                        label={<>Price<Text color={'accent.accentOrange'}>*</Text></>}\n                                                                        placeholder='Type price'\n                                                                        id={priceId}\n                                                                        width={'60'}\n                                                                    />\n                                    }\n                                    <Text\n                                        fontSize={{base:'18px', md:'2xl'}}\n                                        fontWeight={'medium'}\n                                        lineHeight={{base:'short', md:'1.2'}}\n                                        letterSpacing={'-0.01em'}\n                                        mb={'5'}    \n                                    >\n                                        Load the pet`s image\n                                    </Text>\n                                    <FormikControl\n                                        control=\"file\"\n                                        id={photoId}\n                                        name={'photo'}\n                                        size={{base:'116px', md:'140px'}}\n                                        borderRadius={'20px'}\n                                        plusSize={{base:'55%', md:'50%'}}\n\n                                    />\n                                    <FormikControl\n                                        control=\"textarea\"\n                                        name='comments'\n                                        label={<>Comments<Text color={'accent.accentOrange'}>*</Text></>}\n                                        placeholder='Type comments'\n                                        id={commentsId}\n                                    />\n                                    <Box\n                                        maxW={'none'}\n                                        width={'full'}\n                                        display={'flex'}\n                                        flexDirection={{base:'column', md:'row-reverse'}}\n                                        justifyContent={{base:'center', md:'center'}}\n                                    >\n                                        <Button\n                                            type='submit'\n                                            mb={{base:'3', md:'0'}}\n                                            controle='secondary'\n                                            width={{md:'180px'}}\n                                        >\n                                            Done\n                                        </Button>\n                                        <Button\n                                            onClick={()=>setFirstStep(true)}\n                                            mr={{md:'5'}}\n                                            width={{md:'180px'}}\n                                        >\n                                            Back\n                                        </Button>\n                                    </Box>\n                                </Box>\n                        }\n                        \n                    </Form>\n                )}\n        </Formik>\n)}\n\nexport default ModalAddsNotice","const addNoticeInitialState = {\n    categoryName: 'lost-found',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: 'male',\n    location: '',\n    price: '',\n    photo: null,\n    comments: '',\n}\n\nexport default addNoticeInitialState","import * as yup from 'yup';\nimport moment from 'moment/moment'\n\nconst regexPrice = /^[1-9]+[0-9]?$/\nconst regexAdress = /^(?:(?:\\w+-\\w+)+|(?:\\w+)+),\\s(?:(?:\\w+-\\w+)+|(?:\\w+)+)$/\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst addNoticeSchema = yup.object().shape({\n    categoryName: yup.string().oneOf(['lost-found', 'for-free', 'sell']).required(\"Required\"),\n    title: yup.string().min(2).max(48).required(\"Required\"),\n    name: yup.string().min(2).max(16),\n    birthday: yup.date().min(moment(\"06021995\", \"DDMMYYYY\"), 'Must be at later than 06.02.1995').max(moment(), `Must be at earlier than ${moment().add(1, 'days').format('DD.MM.YYYY')}`),\n    breed: yup.string().min(2).max(24),\n    sex: yup.string().oneOf(['male', 'female']).required(\"Required\"),\n    location: yup.string().matches(regexAdress, 'Must be in format City, Region').required(\"Required\"),\n    price: yup.string().matches(regexPrice, 'Must be a positive integer number').nullable().defined(),\n    photo: yup.mixed().test(\n      'fileFormat',\n      'Unsupported file type',\n      (value) => value === null || (value && SUPPORTED_FORMATS.includes(value.type))\n    ).nullable(),\n    comments: yup.string().min(8).max(120).required(\"Required\"),\n});\n\nexport default addNoticeSchema\n","import { AddPetButton, Modal } from 'shared/components';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { ModalAddNotice } from 'components/ModalAddNotice';\n\nconst Home = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <AddPetButton onClick={onOpen} />\n      <Modal isOpen={isOpen} onClose={onClose} title={'Add pet'}>\n        <ModalAddNotice onClose={onClose} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["onClose","titleId","useMemo","nanoid","nameId","birthdayId","breedId","locationId","priceId","photoId","commentsId","isDisabled","dirty","errors","title","name","birthday","breed","undefined","useState","firstStep","setFirstStep","initialValues","addNoticeInitialState","validationSchema","addNoticeSchema","onSubmit","categoryName","sex","location","price","photo","comments","resetForm","newPet","trim","moment","format","Number","console","log","validateOnChange","validateOnBlur","values","autoComplete","encType","control","type","label","color","placeholder","id","width","mb","maxW","display","flexDirection","base","md","justifyContent","controle","onClick","mr","fontSize","fontWeight","lineHeight","letterSpacing","size","borderRadius","plusSize","SUPPORTED_FORMATS","yup","shape","oneOf","required","min","max","add","matches","nullable","defined","test","value","includes","useDisclosure","isOpen","onOpen","ModalAddNotice"],"sourceRoot":""}