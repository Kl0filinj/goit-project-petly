{"version":3,"file":"static/js/738.c603baec.chunk.js","mappings":"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","sources":["schemas/validationYupSchemas.js","components/LoginForm/LoginForm.jsx","pages/Auth/Login.jsx","components/AuthForm/StepSwitcher/RegisterStep1.jsx","components/AuthForm/StepSwitcher/RegisterStep2.jsx","components/AuthForm/StepSwitcher/StepSwitcher.js","components/AuthForm/RegisterForm.jsx","pages/Auth/Register.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst regexPassword = /^\\S*$/\nconst regexPhoneNumber = /^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$/\n\nexport const regesterYupSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email adress\").required(\"Required\"),\n    password: Yup.string().min(7, 'Must be 7 characters or more').max(32, 'Must be 32 characters or less').matches(regexPassword, 'Must not contain spaces').required(\"Required\"),\n    confirm: Yup.string().oneOf([Yup.ref('password'), null], \"Password must match\").required(\"Required\"),\n    name: Yup.string(),\n    address: Yup.string(),\n    phone: Yup.string().max(13, 'Must be 12 numbers or less').matches(regexPhoneNumber, 'Mobile phone must include numbers in format +380xxxxxxxxx'),\n});\n\nexport const loginYupSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email adress\").required(\"Required\"),\n    password: Yup.string().min(7, 'Must be 7 characters or more').max(32, 'Must be 32 characters or less').matches(regexPassword, 'Must not contain spaces').required(\"Required\"),\n});","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Heading, Box, Text } from '@chakra-ui/react';\nimport { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { Button, FormikControl } from 'shared/components';\nimport { loginYupSchema } from 'schemas/validationYupSchemas';\nimport { login } from 'redux/auth/auth-operations';\n\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n    }\n\n    const handleSubmit = async (values, {resetForm}) => {\n        const authData = ({'email': values.email, 'password': values.password });\n        const data = await dispatch(login(authData));\n        resetForm();             \n        data.error.message && alert(data.payload.message);                \n    }\n\n    return (\n        <Box width={{base:'280px', md:'608px', xl:'618px'}} px={{base:'0', md:'80px'}} pt={{base:'42px', md:'60px'}} pb={{base:'0', md:'40px', xl:'60px'}} borderRadius='40px' boxShadow={{base:'0', md:'7px 4px 14px rgba(0, 0, 0, 0.11)'}} bgColor={{base:'#FDF7F2', md:'white'}} mx='auto'>\n            <Heading as='h1' mb='40px' mt={{base:'0'}} textAlign='center' fontWeight='medium'>Login</Heading>\n            <Formik \n                initialValues={initialValues}\n                validationSchema={loginYupSchema}\n                onSubmit={handleSubmit}\n                isSubmitting\n                >\n                {formik => (\n                    <Box as={Form} position='relative' width={{base:'280px', md:'448px', xl:'458px'}} >\n                        <FormikControl \n                            control='input'\n                            type='email' \n                            name='email' \n                            id='lg-email' \n                            placeholder='Email'\n                            h={{md:'52px'}}\n                            width={{base:'280px', md:'448px', xl:'458px'}}\n                            p={{base:\"11px 14px\", md:\"14px 32px\"}} \n                        />\n                        <FormikControl\n                            control='input'\n                            type= 'password'\n                            name='password' \n                            id='lg-password' \n                            placeholder='Password'\n                            h={{md:'52px'}}\n                            width={{base:'280px', md:'448px', xl:'458px'}} \n                            p={{base:\"11px 14px\", md:\"14px 32px\"}}\n                            mb='0' \n                        />\n                        <Button isDisabled={formik.isSubmitting} type='submit' controle='secondary' mb='40px' mt='40px' h={{base:'44px', xl:'48px'}} width={{base:'280px', md:'448px', xl:'458px'}}>Login</Button>\n                        <Box display='flex' justifyContent='center' >\n                            <Text \n                                fontFamily='body' \n                                fontSize='12px' \n                                fontWeight='normal' \n                                lineHeight='1.33' \n                                letterSpacing='0.04em' \n                                color='rgba(17, 17, 17, 0.6)'\n                                textAlign='center'\n                                >\n                                Don't have an account? \n                            </Text>\n                            <Box\n                                as='span'\n                                textDecoration='underline' \n                                fontFamily='body' \n                                fontSize='12px' \n                                fontWeight='normal' \n                                lineHeight='1.33' \n                                letterSpacing='0.04em' \n                                color='#3091EB;'\n                                textAlign='center'>\n                                <Link to='/register'>Register</Link>\n                            </Box>\n                        </Box>\n                    </Box>\n                )}\n            </Formik>\n        </Box>\n    )\n}\n\nexport default LoginForm\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport backgroundMobile from './bg-auth-mobile.png';\nimport backgroundTablet from './bg-auth-tablet.png';\nimport backgroundLaptop from './bg-auth-laptop.png';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <Box as='main' bgImage={{base:backgroundMobile, md:backgroundTablet, xl:backgroundLaptop }} bgPosition='bottom' bgSize='contain' bgRepeat='no-repeat' bgColor='#FDF7F2' h='100vh' pt={{ md:'169px', xl:'46px'}}>\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default Login;\n","// import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n// import { Box } from '@chakra-ui/layout';\nimport React from 'react';\n// import { useState } from 'react';\nimport FormikControl from 'shared/components/FormikControl/FormikControl';\n\n\nconst RegisterStep1 = () => {\n    // const[isShowPassword, setIsShowPassword] = useState(false);\n    // const handleClickPassword =() => {\n    //     setIsShowPassword((prevState)=> !prevState);\n    // }\n    // const[isShowConfirm, setIsShowConfirm] = useState(false);\n    // const handleClickConfirm =() => {\n    //     setIsShowConfirm((prevState)=> !prevState);\n    // }\n    return (\n        <>\n            <FormikControl \n                control='input'\n                type='email' \n                name='email' \n                id='reg-email' \n                placeholder='Email'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}}\n                p={{base:\"11px 14px\", md:\"14px 32px\"}} />\n            <FormikControl\n                control='input'\n                // type={isShowPassword ? 'text' : 'password'}\n                type= 'password'\n                name='password' \n                id='reg-password' \n                placeholder='Password'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}} \n                p={{base:\"11px 14px\", md:\"14px 32px\"}} />\n            {/* <Box onClick={handleClickPassword} position='absolute' zIndex='1' right={{base:'14px',md:'32px'}} top={{base:'70px',md:'80px'}} bg='#FDF7F' h={{base:'25px',md:'25px'}} w={{base:'15px', md:'25px'}}>\n                {isShowPassword ? <ViewOffIcon color='rgba(17, 17, 17, 0.6);' h='inherit' w='inherit'/> : <ViewIcon color='rgba(17, 17, 17, 0.6);' h='inherit' w='inherit'/>}\n            </Box>                 */}\n            <FormikControl \n                control='input'\n                // type={isShowConfirm ? 'text' : 'password'}\n                type= 'password' \n                name='confirm' \n                id='reg-confirm Password' \n                placeholder='Confirm Password'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}}\n                mb='0' \n                p={{base:\"11px 14px\", md:\"14px 32px\"}}/>\n                {/* <Box onClick={handleClickConfirm} position='absolute' zIndex='1' right={{base:'14px',md:'32px'}} top={{base:'130px',md:'150px'}} bg='#FDF7F' h={{base:'25px',md:'25px'}} w={{base:'15px', md:'25px'}}>\n                    {isShowConfirm ? <ViewOffIcon color='rgba(17, 17, 17, 0.6);' h='inherit' w='inherit'/> : <ViewIcon color='rgba(17, 17, 17, 0.6);' h='inherit' w='inherit'/>}\n                </Box> */}\n        </>                   \n    )\n}\n\nexport default RegisterStep1;","import React from 'react';\nimport FormikControl from 'shared/components/FormikControl/FormikControl';\nimport { Button } from 'shared/components';\n\n\nconst RegisterStep2 = ({handleBackClick, isDisabled}) => {\n    return (\n        <>                            \n            <FormikControl \n                control='input'\n                type='text' \n                name='name' \n                id='reg-name' \n                placeholder='Name'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}} />\n                <FormikControl \n                control='input'\n                type='text' \n                name='address' \n                id='address' \n                placeholder='City, region'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}} />\n                <FormikControl \n                control='input'\n                type='tel' \n                name='phone' \n                id='reg-phone' \n                placeholder='Mobile phone'\n                h={{md:'52px'}}\n                width={{base:'280px', md:'448px', xl:'458px'}}\n                mb='0' />\n            <Button controle='secondary' mb='16px' mt='40px' h={{base:'44px', xl:'48px'}} width={{base:'280px', md:'448px', xl:'458px'}} type='submit'>Register</Button>\n            <Button mb='40px' h={{base:'44px', xl:'48px'}} width={{base:'280px', md:'448px', xl:'458px'}} onClick={handleBackClick} >Back</Button>\n        </>\n    )\n}\n\nexport default RegisterStep2;","import React from 'react';\nimport RegisterStep1 from './RegisterStep1';\nimport RegisterStep2 from './RegisterStep2';\n\n    const StepSwitcher = ({step, ...rest}) =>{\n        switch (step) {\n            case 'step1':\n                return <RegisterStep1 {...rest}/>\n            case 'step2':\n                return <RegisterStep2 {...rest}/>\n            default: return null\n        }\n    }\n\nexport default StepSwitcher;","import React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Heading, Box, Text } from '@chakra-ui/react';\nimport { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components';\nimport StepSwitcher from 'components/AuthForm/StepSwitcher/StepSwitcher';\nimport { regesterYupSchema } from 'schemas/validationYupSchemas';\nimport { login, register } from 'redux/auth/auth-operations';\n\n\nconst RegisterForm = () => {\n    const [step, setStep] = useState('step1');\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n        confirm: \"\",\n        name:\"\",\n        address:\"\",\n        phone:\"\"\n    }\n  \n    const onSubmit = async (values, {resetForm}) => {\n        const registerData = ({'email': values.email, 'password': values.password, 'name': values.name, 'address': values.address, 'phone': values.phone });\n        const data = await dispatch(register(registerData));\n        console.log(data);\n        \n        if(data.type === \"auth/register/fulfilled\") {\n            dispatch(login({'email': values.email, 'password': values.password}));\n            resetForm();            \n        }\n        data.error && alert(data.payload.message);                \n    }\n    \n    const handleBackClick = () => {\n        setStep('step1')\n    }\n\n    return (\n        <Box width={{base:'280px', md:'608px', xl:'618px'}} px={{base:'0', md:'80px'}} pt={{base:'42px', md:'60px'}} pb={{base:'0', md:'40px', xl:'60px'}} borderRadius='40px' boxShadow={{base:'0', md:'7px 4px 14px rgba(0, 0, 0, 0.11)'}} bgColor={{base:'#FDF7F2', md:'white'}} mx='auto'>\n            <Heading as='h1' mb='40px' mt={{base:'0'}} textAlign='center' fontWeight='medium'>Registration</Heading>\n            <Formik \n            initialValues={initialValues}\n            validationSchema={regesterYupSchema}\n            onSubmit={onSubmit}\n            >\n                {formik => (\n                <Box as={Form} position='relative' width={{base:'280px', md:'448px', xl:'458px'}} >\n                    <StepSwitcher step={step} isDisabled={formik.isSubmitting} handleBackClick={handleBackClick}/>\n                    {step === 'step1' && <Button  controle='secondary' mb='40px' mt='40px' h={{base:'44px', xl:'48px'}} width={{base:'280px', md:'448px', xl:'458px'}} onClick={async()=>{Object.keys(await formik.validateForm()).length === 0 ? setStep('step2') : formik.submitForm()}}>Next</Button> }\n                    <Box display='flex' justifyContent='center' >\n                        <Text \n                        fontFamily='body' \n                        fontSize='12px' \n                        fontWeight='normal' \n                        lineHeight='1.33' \n                        letterSpacing='0.04em' \n                        color='rgba(17, 17, 17, 0.6)'\n                        textAlign='center'\n                        >\n                            Already have an account? \n                        </Text>\n                        <Box\n                        as='span'\n                        textDecoration='underline' \n                        fontFamily='body' \n                        fontSize='12px' \n                        fontWeight='normal' \n                        lineHeight='1.33' \n                        letterSpacing='0.04em' \n                        color='#3091EB;'\n                        textAlign='center'>\n                            <Link to='/login'>Login</Link>\n                        </Box>\n                    </Box>\n                </Box>\n                )}\n            </Formik>\n        </Box>\n    )\n};\n\nexport default RegisterForm;","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport RegisterForm from 'components/AuthForm/RegisterForm';\nimport backgroundMobile from './bg-auth-mobile.png';\nimport backgroundTablet from './bg-auth-tablet.png';\nimport backgroundLaptop from './bg-auth-laptop.png';\n\n\nconst Register = () => {\n    \n  return (\n    <Box as='main' bgImage={{base:backgroundMobile, md:backgroundTablet, xl:backgroundLaptop }} bgPosition='bottom' bgSize='contain' bgRepeat='no-repeat' bgColor='#FDF7F2' h='100vh' pt={{ md:'169px', xl:'46px'}}>\n      <RegisterForm />\n    </Box>\n  )\n};\n\nexport default Register;\n"],"names":["regexPassword","regesterYupSchema","Yup","email","required","password","min","max","matches","confirm","oneOf","name","address","phone","loginYupSchema","dispatch","useDispatch","handleSubmit","values","resetForm","authData","login","data","error","message","alert","payload","width","base","md","xl","px","pt","pb","borderRadius","boxShadow","bgColor","mx","as","mb","mt","textAlign","fontWeight","initialValues","validationSchema","onSubmit","isSubmitting","formik","Form","position","control","type","id","placeholder","h","p","isDisabled","controle","display","justifyContent","fontFamily","fontSize","lineHeight","letterSpacing","color","textDecoration","to","bgImage","backgroundMobile","backgroundTablet","backgroundLaptop","bgPosition","bgSize","bgRepeat","FormikControl","handleBackClick","onClick","step","rest","useState","setStep","registerData","register","console","log","Object","validateForm","keys","length","submitForm"],"sourceRoot":""}