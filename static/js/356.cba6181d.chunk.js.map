{"version":3,"file":"static/js/356.cba6181d.chunk.js","mappings":"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","sources":["components/NewsList/NewsList.jsx","pages/News/getNews.js","components/NewsSearch/NewsSearch.jsx","pages/News/News.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs"],"sourcesContent":["import { Box, SimpleGrid, Heading, Text, Link } from \"@chakra-ui/react\";\n\t\nexport const NewsList = ({news}) => {\n\t\n    // const editDate = (date) => {\n\t// \treturn date.split('-').reverse().join(\"/\")\n\t// }\n\t\n\t\treturn (\n            <SimpleGrid \n            justifyItems={'center'} \n            mt={['40px']} \n            columns={[1, 1, 1, 2, 3]} \n            spacing={['48px', '48px', '48px', '60px', '60px']} \n            p={2}\n            >\n                {news.map(({ _id, title, description, date, url }) =>(\n                <Box \n                position={'relative'}\n                maxWidth={['330px', null, null, null, null, '394px']}\n                p={2}\n                _before={{\n                    content: '\" \"',\n                    position: 'absolute',\n                    top: '-4px',\n                    left: '0',\n                    w: '85%',\n                    height: '4px',\n                    bg: 'linear-gradient(90deg, #FF634E 0%, #FFDF48 105.44%)',\n                    borderRadius: '40px',\n                }}\n                 _hover={{\n                shadow: 'md',\n                }}\n                key={_id}>\n                <Heading \n                noOfLines={2} \n                as=\"h3\" \n                length={60}\n                fontSize='24px'\n                lineHeight='1.375'\n                letterSpacing='-0.01em'>\n                    {title}\n                </Heading>\n\t\t\t\t<Text \n                noOfLines={8} \n                mt={'16px'}\n                fontSize={'16px'}\n                lineHeight='1.375'\n                overflow='hidden'\n                color={'#111321'}>\n                    {description}\n                </Text>\n\t\t\t\t\t<Box \n                    display={'flex'}\n                    justifyContent='space-between'\n                    alignItems={'center'}\n                    mt={['20px', '20px', '20px', '20px', '40px']}>\n\t\t\t\t\t\t<Text\n                        fontSize={'16px'}\n                        color={'rgba(17, 17, 17, 0.6)'}\n                        lineHeight='1.375'>\n                            {date}\n                        </Text>\n\t\t\t\t\t\t<Link\n                        position={'relative'}\n                        fontSize='16px'\n                        lineHeight='1.375'\n                        color={'#F59256'}\n                        bgColor={'transparent'} \n                        as=\"a\" href={url} target=\"_blank\" rel=\"noreferrer\">Read more</Link>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n                ))}\n            </SimpleGrid>\n       )\n    }\n     \n","const BASE_URL = \"https://goit-project-petly-backend.onrender.com/api\";\n\t\n\texport const getNews = async () => {\n\t\tconst response = await fetch(`${BASE_URL}/news`);\n\t\tconst result = response.json();\n\t\treturn result;\n\t};\n\n","import { useState } from \"react\";\nimport { FilterInput } from \"shared/components\";\n\nexport const NewsSearch = ({ searchFunction }) => {\n\tconst [searchQuery, setSearchQuery] = useState('');\n\n\tconst searchHandler = e => {\n\t\tsetSearchQuery(e.target.value);\n\t\tsearchFunction(e.target.value);\n\t}\n\n\tconst removeQuery = () => {\n\t\tsetSearchQuery(\"\")\n\t\tsearchFunction(\"\");\n\t}\n\n\treturn (\n    <FilterInput\n    type=\"text\"  \n    value={searchQuery} \n    onChange={searchHandler}\n    onClick={removeQuery}/>\n    )\n  }","import { useState, useEffect } from 'react';\nimport { Box, Heading, Spinner } from '@chakra-ui/react';\nimport Container from '../../shared/components/Box/Container';\nimport Section from '../../shared/components/Box/Section';\nimport { NewsList } from 'components/NewsList/NewsList';\nimport { getNews } from './getNews';\nimport { NewsSearch } from 'components/NewsSearch/NewsSearch';\n\n\n\nconst News = () => {\n\tconst [news, setNews] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tasync function fetch() {\n\t\t\ttry {\n\t\t\t\tconst response = await getNews({});\n\t\t    sortByDate(response)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tfetch();\n\t}, []);\n\n\n\tconst searchNews = async query => {\n\t\tconst searchQuery = query.toLowerCase();\n\t\tconst response = await getNews({});\n\t\tconst foundNews = response.filter(\n\t\t\tnews =>\n\t\t\t\tnews.title.toLowerCase().includes(searchQuery) ||\n\t\t\t\tnews.description.toLowerCase().includes(searchQuery)\n\t\t);\n\t\tsortByDate(foundNews);\n\t};\n\n\tconst sortByDate = array => {\n\t\tconst addDateForSort = array.map(news => {\n\t\t\treturn { ...news, dateForSort: Date.parse(new Date(news.date)) };\n\t\t});\n\n\t\tconst sortedByDateNews = addDateForSort.sort(\n\t\t\t(a, b) => b.dateForSort - a.dateForSort\n\t\t);\n\n\t\tsetNews(sortedByDateNews);\n\t\tsetIsLoading(false);\n\t};\n\n\treturn (\n    <Box bgColor={'#FDF7F2'}>\n    <Container>\n\t\t<Section pt={['54px', '54px', '54px', '94px', '60px']} >\n\t\t\t<Heading \n\t\t\tas='h2' \n\t\t\tsize='3xl' \n\t\t\tfontSize={['24px', '24px', '24px', '48px']} \n\t\t\ttextAlign={'center'}\n\t\t\t// mt={['54px', '54px', '54px', '94px', '60px']} \n\t\t\tmb={['28px', '28px', '28px', '40px']}\n\t\t\t>News</Heading>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner\n\t\t\t\tthickness='4px'\n\t\t\t\tspeed='0.85s'\n\t\t\t\temptyColor='#F59256;'\n\t\t\t\tcolor='#F5F5F5'\n\t\t\t\tsize='xl' />\n\t\t\t) : (\t\n\t\t\t\t<>\n\t\t\t<NewsSearch searchFunction={searchNews} />\n\t\t\t<NewsList news={news} />\t\n\t\t\t</>\n\t\t\t)}\n\t\t\t\n\t\t</Section>\n    </Container>\n    </Box>\n\t);\n};\n\nexport default News;\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n"],"names":["NewsList","news","justifyItems","mt","columns","spacing","p","map","_id","title","description","date","url","position","maxWidth","_before","content","top","left","w","height","bg","borderRadius","_hover","shadow","noOfLines","as","length","fontSize","lineHeight","letterSpacing","overflow","color","display","justifyContent","alignItems","bgColor","href","target","rel","getNews","fetch","response","result","json","NewsSearch","searchFunction","useState","searchQuery","setSearchQuery","type","value","onChange","e","onClick","setNews","isLoading","setIsLoading","useEffect","sortByDate","console","log","searchNews","query","toLowerCase","foundNews","filter","includes","array","addDateForSort","dateForSort","Date","parse","sortedByDateNews","sort","a","b","Container","Section","pt","size","textAlign","mb","thickness","speed","emptyColor","Grid","forwardRef","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","__css","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","item","isObject","keys","reduce","key","SimpleGrid","spacingX","spacingY","minChildWidth","theme","useTheme","width","n","_value","getToken","widthToColumns","Link","useStyleConfig","omitThemingProps","className","isExternal","cx"],"sourceRoot":""}