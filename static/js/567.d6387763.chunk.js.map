{"version":3,"file":"static/js/567.d6387763.chunk.js","mappings":"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","sources":["components/NoticesSearch/NoticesSearch.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","components/NoticesCategoryItem/NoticesCategoryItem.jsx","components/NoticesCategoriesList/NoticesCategoriesList.jsx","../node_modules/@chakra-ui/button/dist/chunk-PEYICJIL.mjs","../node_modules/@chakra-ui/icons/dist/chunk-VJ54TX72.mjs","components/AddNoticeButton/AddNoticeButton.jsx","pages/Notices/Notices.jsx","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs"],"sourcesContent":["import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { FilterInput } from 'shared/components';\n// import { CloseIcon, Search2Icon } from '@chakra-ui/icons';\n// import { Box } from '@chakra-ui/react';\n\nconst NoticesSearch = onSubmit => {\n  const [query, setQuery] = useState('');\n  const [\n    // filteredData,\n    setFilteredData,\n  ] = useState([]);\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    setFilteredData(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('What pet do you need?');\n      return;\n    }\n    onSubmit(query);\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n  };\n\n  return (\n    <FilterInput\n      name={'search'}\n      onChange={handleChange}\n      handleSearch={handleSubmit}\n      handleClear={clearInput}\n      value={query}\n      mb={'28px'}\n    />\n    // <Box>\n    //   <Box onSubmit={handleSubmit}>\n    //     <Box\n    //       type=\"text\"\n    //       name=\"input\"\n    //       autocomplete=\"off\"\n    //       placeholder=\"Search\"\n    //       onChange={handleChange}\n    //       value={filteredData}\n    //     />\n    //     <Box type=\"submit\">\n    //       {filteredData.length === 0 ? (\n    //         <Search2Icon />\n    //       ) : (\n    //         <CloseIcon onClick={clearInput} />\n    //       )}\n    //     </Box>\n    //   </Box>\n    // </Box>\n  );\n};\n\n// NoticesSearch.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nexport default NoticesSearch;\n","import { Outlet } from 'react-router-dom'\nimport { FilterLink } from 'shared/components'\nimport { Box } from '@chakra-ui/react'\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors'\n\nconst NoticesCategoriesNav = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn)\n  return (\n    <Box>\n        <Box\n          as={'nav'}\n          maxW={{base:'280px', md:'474px', xl: '802px'}}\n          display={'flex'}\n          flexWrap={'wrap'}\n          gap={{base:'12px', md:'16px 12px', xl: '12px'}}\n          mb={{base:'30px', md:'60px'}}\n          mr={'auto'}\n          ml={{base:'auto', md:'0'}}>\n            <FilterLink to={\"/notices/lost-found\"}>lost/found</FilterLink>\n            <FilterLink to={\"/notices/free\"}>in good hand</FilterLink>\n            <FilterLink to={\"/notices/sell\"}>sell</FilterLink>\n              {isLoggedIn && (\n              <> \n              <FilterLink to={\"/notices/favorite\"}>favorite ads</FilterLink> \n              <FilterLink to={\"/notices/own\"}>my ads</FilterLink> \n              </>\n              )}\n        </Box>\n        <Outlet />\n    </Box>\n  )\n}\n\nexport default NoticesCategoriesNav","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import React from 'react'\nimport {Text, Box, Image, Card, CardBody, Heading, CardFooter} from '@chakra-ui/react'\nimport { CardButton, FavoriteButton } from 'shared/components'\n\nconst NoticesCategoryItem = (\n  {\n  id,\n  avatar,\n  favorite,\n  title,\n  breed,\n  location,\n  age,\n  price,\n  condition,\n  onDeletePets,\n  onLearnMore,\n  }) => {\n  return (\n    <Card\n      as={'li'}\n      width={'100%'}\n      boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n      borderBottomRadius={'20px'}\n    >\n        <CardBody p={'0'} mb={(price || favorite) ? '0' : '30px'}>\n          <Box position={'relative'}>\n            <Image src={avatar} alt={breed} width={'100%'} height={'288px'}/>\n            <Box\n              as={'span'}\n              position={'absolute'}\n              top={'20px'}\n              display={'inline-flex'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              w={'158px'}\n              h={'28px'}\n              px={'20px'}\n              py={'6px'}\n              borderRightRadius={'20px'}\n              color={'#111111'}\n              fontSize={'xs'}\n              fontWeight={'medium'}\n              lineHeight={'xl'}\n              letterSpacing={'0.04em'}\n              backgroundColor={'rgba(255, 255, 255, 0.6)'}\n              backdropFilter={'blur(2px)'}>\n                {condition}\n            </Box>\n            <FavoriteButton/>\n          </Box>\n          <Box p={'20px'}>\n            <Heading\n              mb={'20px'}\n              color={'#111111'}\n              fontSize={'28px'}\n              fontWeight={'bold'}\n              lineHeight={'short'}\n              letterSpacing={'-0.01em'}>\n                {title}\n            </Heading>\n            <Text\n              mb={'8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Breed: {breed}\n            </Text>\n            <Text\n              mb={'8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Location: {location}\n            </Text>\n            <Text\n              mb={price && '8px'}\n              fontSize={'16px'}\n              fontWeight={'medium'}\n              lineHeight={'short'}\n              color={'#111111'}>\n                Age: {age}\n            </Text>\n            {price && <Text\n                        mb={price && '8px'}\n                        fontSize={'16px'}\n                        fontWeight={'medium'}\n                        lineHeight={'short'}\n                        color={'#111111'}>\n                          Price: {price}\n                      </Text>}\n          </Box>\n        </CardBody>\n        <CardFooter\n          pt={'0'}\n          px={'16px'}\n          pb={!favorite ? '32px' : '16px'}\n          width={'100%'}\n          display={'flex'}\n          alignItems={'center'}\n          flexDirection={'column'}>\n            <CardButton type=\"submit\" onClick={() => onLearnMore(id)} mb={favorite && '12px'}>\n              Learn more\n            </CardButton>\n            {favorite &&  <CardButton type=\"submit\" onClick={() => onDeletePets(id)} controle='delete'>\n                            Delete\n                          </CardButton>}\n        </CardFooter>\n    </Card>\n  )\n}\n\nexport default NoticesCategoryItem","import React from 'react';\nimport { useEffect, useState} from 'react'\nimport NoticesCategoryItem from '../NoticesCategoryItem/NoticesCategoryItem'\nimport { SimpleGrid } from '@chakra-ui/react';\nimport {default as userPets} from './ListTest.json'\nimport getNoticesByCategory from 'components/NoticesCategoryItem/NoticesCategoryItem'\nimport {Spinner} from '@chakra-ui/react';\n\n\nconst NoticesCategoriesList = ({query}) => {\n  const [pets, setPets] = useState([])\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let filteredPets = pets;\n\n  if (query !== \"\") {\n    filteredPets = pets.filter(({ title }) => {\n      return title.toLowerCase().includes(query.toLowerCase())\n    })\n  }\n  useEffect(() => {\n    const fetchPets = async () => {\n      setLoading(true);\n\n      try {\n        const data = await getNoticesByCategory();\n        setPets((prevPets) => [...prevPets, ...data]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPets();\n  }, []);\n\n  // const filterPets = userPets.filter(pets => pets.condition === condition);\n  return (\n    <>\n    { filteredPets && (\n      <SimpleGrid\n      as='ul'\n      mx={'auto'}\n      maxWidth={{base:'280px', md:'704px', xl: '1248px'}}\n      gridTemplateColumns={{base:'1fr', md:'1fr 1fr', xl: '1fr 1fr 1fr 1fr'}}\n      gap={'32px'}\n      width={'full'}\n      listStyleType={'none'}\n      key={userPets.id}>\n        {userPets.map(\n          ({ id, favorite, avatar, title, breed, location, age, condition, price }) => (\n            <NoticesCategoryItem\n              key={id}\n              avatar={avatar}\n              favorite={favorite}\n              title={title}\n              breed={breed}\n              location={location}\n              age={age}\n              price={price}\n              condition={condition}\n            />\n          )\n        )}\n    </SimpleGrid>\n    )}\n    {error && <p>Something went wrong</p>}\n    {loading && <Spinner/>}\n    </>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import {\n  ButtonGroupProvider\n} from \"./chunk-DGWZA2DU.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n","// src/Add.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport {\n  AddIcon\n};\n","import { Button, ButtonGroup, IconButton } from '@chakra-ui/react';\nimport { AddIcon } from '@chakra-ui/icons'\nimport {React, useState} from 'react';\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors'\nimport { ToastContainer, toast } from 'react-toastify';\nimport ModalAddNotice from \"components/ModalAddNotice/ModalAddNotice\"\n\nconst AddNoticeButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n    toast(\"Please log in!\")}\n    setShowModal(true);\n  }\n\n\n  return (\n    <>\n    <ButtonGroup size='sm' isAttached variant='outline'>\n      <Button type=\"button\" onClick={handleClick}>Add pet</Button>\n        <IconButton aria-label='Add to friends' onClick={handleClick} icon={<AddIcon />} />\n    </ButtonGroup>\n    <ToastContainer />\n    {showModal && (\n      <ModalAddNotice \n      setShowModal={setShowModal}\n      />\n    )}\n    </>\n  );\n};\n\nexport default AddNoticeButton;\n","import {useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesCategoriesList from \"components/NoticesCategoriesList/NoticesCategoriesList\";\n// import NoticesCategoryItem from \"components/NoticesCategoryItem/NoticesCategoryItem\";\nimport AddNoticeButton from \"components/AddNoticeButton/AddNoticeButton\";\nimport { Container, Section } from 'shared/components';\nimport { Heading } from '@chakra-ui/react'\n\nconst Notices = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const {categoryName} = useParams();\n  return (\n    <Container>\n      <Section>\n        <Heading\n          as={'h1'}\n          fontSize={{base:'24px', md:'48px'}}\n          fontWeight={'bold'}\n          lineHeight={'short'}\n          textAlign={'center'}\n          mb={7}>\n            Find your favorite pet\n        </Heading>\n        <NoticesSearch setSearchQuery={setSearchQuery}/>\n        <NoticesCategoriesNav />\n        <AddNoticeButton /> \n        <NoticesCategoriesList category={categoryName} searchQuery={searchQuery}/>\n        \n      </Section>\n    </Container>\n  );\n};\n\nexport default Notices;\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n"],"names":["onSubmit","useState","query","setQuery","setFilteredData","name","onChange","e","target","value","toLowerCase","handleSearch","preventDefault","trim","alert","handleClear","mb","isLoggedIn","useSelector","getIsLoggedIn","as","maxW","base","md","xl","display","flexWrap","gap","mr","ml","to","createStylesContext","CardStylesProvider","useCardStyles","Card","forwardRef","props","ref","omitThemingProps","className","children","direction","justify","align","rest","styles","useMultiStyleConfig","jsx","chakra","cx","__css","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","CardBody","body","CardFooter","footer","id","avatar","favorite","title","breed","location","age","price","condition","onDeletePets","onLearnMore","width","boxShadow","borderBottomRadius","p","src","alt","height","top","w","h","px","py","borderRightRadius","color","fontSize","fontWeight","lineHeight","letterSpacing","backgroundColor","backdropFilter","pt","pb","type","onClick","controle","pets","setPets","loading","setLoading","error","setError","filteredPets","filter","includes","useEffect","fetchPets","getNoticesByCategory","data","prevPets","mx","maxWidth","gridTemplateColumns","listStyleType","userPets","attachedStyles","horizontal","borderEndRadius","borderRadius","borderStartRadius","vertical","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","size","colorScheme","variant","isAttached","isDisabled","orientation","_className","context","useMemo","groupStyles","isVertical","ButtonGroupProvider","role","flexDir","displayName","AddIcon","createIcon","d","showModal","setShowModal","handleClick","toast","icon","searchQuery","setSearchQuery","categoryName","useParams","textAlign","category","Grid","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","SimpleGrid","count","columns","spacingX","spacingY","minChildWidth","theme","useTheme","mapResponsive","n","_value","getToken","widthToColumns"],"sourceRoot":""}