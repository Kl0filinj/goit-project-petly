{"version":3,"file":"static/js/520.222466cb.chunk.js","mappings":"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","sources":["components/NoticesSearch/NoticesSearch.jsx","components/ModalAddNotice/addNoticeInitialState.js","components/ModalAddNotice/addNoticeSchema.js","components/ModalAddNotice/ModalAddNotice.jsx","../node_modules/@chakra-ui/icons/dist/chunk-VJ54TX72.mjs","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { FilterInput } from 'shared/components';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst NoticesSearch = ({ searchFunction }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    searchFunction(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast('What pet do you need?');\n      return;\n    }\n    searchFunction(query);\n  };\n\n  const clearInput = () => {\n    setQuery('');\n    searchFunction('');\n  };\n\n  return (\n    <>\n    <FilterInput\n        type=\"text\"\n        name={'search'}\n        onChange={handleChange}\n        handleSearch={handleSubmit}\n        handleClear={clearInput}\n        value={query}\n        mb={'28px'}\n      />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default NoticesSearch;\n","const addNoticeInitialState = {\n    categoryName: 'lost-found',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: 'male',\n    location: '',\n    price: '',\n    photo: null,\n    comments: '',\n}\n\nexport default addNoticeInitialState","import * as yup from 'yup';\nimport moment from 'moment/moment'\n\nconst regexPrice = /(^[1-9])(\\d*)$/\nconst regexAdress = /^(?:(?:\\w+-\\w+)+|(?:\\w+)+),\\s(?:(?:\\w+-\\w+)+|(?:\\w+)+)$/\nconst regexTitle = /^(?!(?:.*?\\d){3})(.+)$/u\nconst regexName = /^[A-Za-zА-Яа-яёЁЇїІіЄєҐґ\\s\\-']+$/\nconst regexBreed = /^[A-Za-zА-Яа-яёЁЇїІіЄєҐґ\\s\\-']+$/\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\nconst FILE_SIZE = 1000000\n\nconst addNoticeSchema = yup.object().shape({\n    categoryName: yup.string().oneOf(['lost-found', 'for-free', 'sell']).required(\"Required\"),\n    title: yup.string().min(2).max(48).matches(regexTitle, 'Can contain only two digits').required(\"Required\"),\n    name: yup.string().min(2).max(16).matches(regexName, 'Can only contain letters'),\n    birthday: yup.date().min(moment(\"06021995\", \"DDMMYYYY\"), 'Must be at later than 06.02.1995').max(moment(), `Must be at earlier than ${moment().add(1, 'days').format('DD.MM.YYYY')}`),\n    breed: yup.string().min(2).max(24).matches(regexBreed, 'Can only contain letters'),\n    sex: yup.string().oneOf(['male', 'female']).required(\"Required\"),\n    location: yup.string().matches(regexAdress, 'Must be in format City, Region').required(\"Required\"),\n    price: yup.string().when('categoryName', {\n      is: 'sell',\n      then: (schema) => schema.matches(regexPrice, 'Must be a positive integer number').required(\"Required\"),\n      otherwise: (schema) => schema.notRequired(),\n    }),\n    photo: yup.mixed()\n    .test(\n      'fileSize',\n      'Only documents up to 1MB are permitted',\n      (value) => value === null || (value && value.size <= FILE_SIZE)\n    )\n    .test(\n      'fileFormat',\n      'Unsupported file type',\n      (value) => value === null || (value && SUPPORTED_FORMATS.includes(value.type))\n    ).nullable(),\n    comments: yup.string().min(8).max(120).required(\"Required\"),\n});\n\nexport default addNoticeSchema\n","import { Formik, Form } from 'formik';\nimport { useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport moment from 'moment/moment';\nimport { Text, Box, Spinner } from '@chakra-ui/react';\nimport { addNotice } from 'redux/notices/notices-operations';\nimport { getNoticesLoading } from 'redux/notices/notices-selectors';\nimport {\n  FormikControl,\n  Button,\n  errorToast,\n  successToast,\n} from 'shared/components';\nimport { addNoticeInitialState, addNoticeSchema } from './index';\nimport { useLocation } from 'react-router-dom';\n\nconst ModalAddsNotice = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getNoticesLoading);\n  const location = useLocation();\n  const category = useMemo(\n    () => location.pathname.split('/')[2],\n    [location.pathname]\n  );\n  const [firstStep, setFirstStep] = useState(true);\n\n  const titleId = useMemo(() => nanoid(), []);\n  const nameId = useMemo(() => nanoid(), []);\n  const birthdayId = useMemo(() => nanoid(), []);\n  const breedId = useMemo(() => nanoid(), []);\n  const locationId = useMemo(() => nanoid(), []);\n  const priceId = useMemo(() => nanoid(), []);\n  const photoId = useMemo(() => nanoid(), []);\n  const commentsId = useMemo(() => nanoid(), []);\n\n  function isDisabled(dirty, errors) {\n    const { title, name, birthday, breed } = errors;\n    return (\n      !dirty ||\n      title !== undefined ||\n      name !== undefined ||\n      birthday !== undefined ||\n      breed !== undefined\n    );\n  }\n\n  const handleSubmit = (\n    {\n      categoryName,\n      title,\n      name,\n      birthday,\n      breed,\n      sex,\n      location,\n      price,\n      photo,\n      comments,\n    },\n    { resetForm }\n  ) => {\n    const newPet = new FormData();\n    newPet.append('categoryName', categoryName);\n    newPet.append('title', title.trim());\n    newPet.append('name', name.trim());\n    newPet.append(\n      'birthdate',\n      birthday ? moment(birthday, 'YYYYY-MM-DD').format('DD.MM.YYYY') : null\n    );\n    newPet.append('breed', breed.trim());\n    newPet.append('sex', sex);\n    newPet.append('location', location.trim());\n    newPet.append('price', price ? Number(price) : '');\n    newPet.append('photo', photo);\n    newPet.append('comments', comments.trim());\n\n    dispatch(addNotice({ newPet, category }))\n      .then(({ error }) => {\n        if (error) {\n          return errorToast(error.message);\n        }\n        successToast('Notice successfully added');\n        resetForm();\n        onClose();\n      })\n      .catch(e => errorToast(e.message));\n  };\n\n  return (\n    <Formik\n      initialValues={addNoticeInitialState}\n      validationSchema={addNoticeSchema}\n      onSubmit={handleSubmit}\n      validateOnChange={true}\n    >\n      {({ values, errors, dirty }) => (\n        <Form autoComplete=\"off\" encType=\"multipart/form-data\">\n          {firstStep ? (\n            <>\n              <FormikControl control=\"category-radio\" name=\"categoryName\" />\n              <FormikControl\n                type=\"text\"\n                name=\"title\"\n                label={\n                  <>\n                    Title of ad\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder=\"Type title\"\n                id={titleId}\n                width={60}\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"name\"\n                label=\"Name pet\"\n                placeholder=\"Type name pet\"\n                id={nameId}\n                width={60}\n              />\n              <FormikControl\n                type=\"date\"\n                name=\"birthday\"\n                label=\"Date of birthday\"\n                id={birthdayId}\n                width={60}\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"breed\"\n                label=\"Breed\"\n                placeholder=\"Type breed\"\n                id={breedId}\n                width={60}\n                mb={'40px'}\n              />\n              <Box\n                maxW={'none'}\n                display={'flex'}\n                flexDirection={{ base: 'column', md: 'row-reverse' }}\n                justifyContent={{ base: 'center', md: 'center' }}\n              >\n                <Button\n                  controle=\"secondary\"\n                  onClick={() => setFirstStep(false)}\n                  isDisabled={isDisabled(dirty, errors)}\n                  mb={{ base: '3', md: '0' }}\n                  width={{ md: '180px' }}\n                >\n                  Next\n                </Button>\n                <Button\n                  onClick={onClose}\n                  mr={{ md: '5' }}\n                  width={{ md: '180px' }}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <Box display={'flex'} flexDirection={'column'} maxW={'none'}>\n              <FormikControl\n                control=\"sex-radio\"\n                name=\"sex\"\n                label={\n                  <>\n                    The sex\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"location\"\n                label={\n                  <>\n                    Location\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder='Type location, e.g. \"Kyiv, UA\"'\n                id={locationId}\n                width={'60'}\n              />\n              {values.categoryName === 'sell' && (\n                <FormikControl\n                  type=\"text\"\n                  name=\"price\"\n                  label={\n                    <>\n                      Price\n                      <Text as={'span'} color={'accent.accentOrange'}>\n                        *\n                      </Text>\n                    </>\n                  }\n                  placeholder=\"Type price\"\n                  id={priceId}\n                  width={'60'}\n                />\n              )}\n              <Text\n                fontSize={{ base: '18px', md: '2xl' }}\n                fontWeight={'medium'}\n                lineHeight={{ base: 'short', md: '1.2' }}\n                letterSpacing={'-0.01em'}\n                mb={'5'}\n              >\n                Load the pet`s image\n              </Text>\n              <FormikControl\n                control=\"file\"\n                id={photoId}\n                name={'photo'}\n                size={{ base: '116px', md: '140px' }}\n                mx={0}\n                borderRadius={'20px'}\n                plusSize={{ base: '55%', md: '50%' }}\n              />\n              <FormikControl\n                control=\"textarea\"\n                name=\"comments\"\n                label={\n                  <>\n                    Comments\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder=\"Type comments\"\n                id={commentsId}\n              />\n              <Box\n                maxW={'none'}\n                width={'full'}\n                display={'flex'}\n                flexDirection={{ base: 'column', md: 'row-reverse' }}\n                justifyContent={{ base: 'center', md: 'center' }}\n              >\n                <Button\n                  type=\"submit\"\n                  mb={{ base: '3', md: '0' }}\n                  controle=\"secondary\"\n                  width={{ md: '180px' }}\n                >\n                  {isLoading\n                  ? <> Adding <Spinner emptyColor='#FF6101'\n                                      color='#F5F5F5'\n                                      textAlign='center'\n                                      size='xs'/></>\n                  : 'Done'}\n                </Button>\n                <Button\n                  onClick={() => setFirstStep(true)}\n                  mr={{ md: '5' }}\n                  width={{ md: '180px' }}\n                >\n                  Back\n                </Button>\n              </Box>\n            </Box>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ModalAddsNotice;\n","// src/Add.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport {\n  AddIcon\n};\n","import { FilterLink, Modal } from 'shared/components';\nimport { Box, useDisclosure, Text, Button } from '@chakra-ui/react';\nimport { ModalAddNotice } from 'components/ModalAddNotice';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\nimport { toast } from 'react-toastify';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst NoticesCategoriesNav = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      toast('Please log in!');\n    }\n    onOpen(true);\n  };\n\n  return (\n    <Box\n      maxWidth={{ base: '280px', md: '704px', xl: '1248px' }}\n      mx={'auto'}\n      id=\"22\"\n    >\n      <Box mb={{ base: '30px', md: '60px' }} display={'flex'}>\n        <Box\n          as={'nav'}\n          maxW={{ base: '280px', md: '474px', xl: '802px' }}\n          display={'flex'}\n          flexWrap={'wrap'}\n          gap={{ base: '12px', md: '16px 12px', xl: '12px' }}\n          mr={'auto'}\n          ml={{ base: 'auto', md: '0' }}\n        >\n          <FilterLink to={'lost-found'}>lost/found</FilterLink>\n          <FilterLink to={'for-free'}>in good hand</FilterLink>\n          <FilterLink exact='true' to={'sell'}>sell</FilterLink>\n          {isLoggedIn && (\n            <>\n              <FilterLink to={'favorite'}>favorite ads</FilterLink>\n              <FilterLink to={'own'}>my ads</FilterLink>\n            </>\n          )}\n        </Box>\n        <Box\n          display={'flex'}\n          w={{ base: '80px', md: '140px' }}\n          h={{ base: '80px' }}\n          flexDirection={{ base: 'column-reverse', md: 'row' }}\n          alignItems={{ base: 'center' }}\n          justifyContent={{ base: 'center' }}\n          borderRadius={{ base: '50%', md: '100%' }}\n          bgColor={{ base: '#F59256', md: 'transparent' }}\n          // as={'Button'}\n          position={{ base: 'fixed', md: 'static' }}\n          top={'455px'}\n          right={'20px'}\n          zIndex={'2'}\n        >\n          <Text\n            maxWidth={{ xl: '767px' }}\n            size={{ w: '74px', h: '27px' }}\n            textAlign={'center'}\n            fontStyle={'normal'}\n            fontWeight={'500'}\n            fontSize={{ base: '12px', md: '20px' }}\n            lineHeight={'27px'}\n            mr={{ base: '0px', md: '12px' }}\n            color={{ base: 'white', md: '#111111' }}\n          >\n            Add pet\n          </Text>\n          <Button\n            display={'flex'}\n            alignItems={{ base: 'center' }}\n            justifyContent={{ base: 'center' }}\n            backgroundColor={'#F59256'}\n            borderRadius={'50%'}\n            w={{ base: '21px', md: '44px' }}\n            h={{ base: '21px', md: '44px' }}\n            _hover={{ backgroundColor: '#FF6101' }}\n            _focus={{ backgroundColor: '#FF6101' }}\n            onClick={handleClick}\n          >\n            <AddIcon\n              w={{ base: '21px', md: '16px' }}\n              h={{ base: '21px', md: '16px' }}\n              color={'white'}\n            />\n          </Button>\n        </Box>\n        <Modal isOpen={isOpen} onClose={onClose} title={'Add pet'}>\n          <ModalAddNotice onClose={onClose} />\n        </Modal>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport { Container, Section } from 'shared/components';\nimport { Heading, Box } from '@chakra-ui/react';\nimport { getNoticesError } from 'redux/notices/notices-selectors';\nimport { useSelector } from 'react-redux';\n\nconst Notices = () => {\n  const [, setSearchQuery] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const error = useSelector(getNoticesError);\n\n  const category = location.pathname;\n\n  useEffect(() => {\n    if (category === '/notices') navigate('sell');\n  }, [category, navigate]);\n\n  return (\n    <Box bgColor={'#FDF7F2'} h={'100vh'}>\n       <Container>\n        <Section>\n          <Heading\n            as={'h1'}\n            fontSize={{ base: '24px', md: '48px' }}\n            fontWeight={'bold'}\n            lineHeight={'short'}\n            textAlign={'center'}\n            mb={7}\n          >\n            Find your favorite pet\n          </Heading>\n          <NoticesSearch setSearchQuery={setSearchQuery} />\n          <NoticesCategoriesNav />\n          <Suspense fallback={null}>\n            {error ? (\n              <Heading>Here is problem, try to reload the page</Heading>\n            ) : (\n              <Outlet />\n            )}\n          </Suspense>\n        </Section>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Notices;\n"],"names":["searchFunction","useState","query","setQuery","type","name","onChange","e","target","value","toLowerCase","handleSearch","preventDefault","trim","toast","handleClear","mb","categoryName","title","birthday","breed","sex","location","price","photo","comments","regexPrice","SUPPORTED_FORMATS","yup","shape","oneOf","required","min","max","matches","moment","add","format","when","is","then","schema","otherwise","notRequired","test","size","includes","nullable","onClose","dispatch","useDispatch","isLoading","useSelector","getNoticesLoading","useLocation","category","useMemo","pathname","split","firstStep","setFirstStep","titleId","nanoid","nameId","birthdayId","breedId","locationId","priceId","photoId","commentsId","isDisabled","dirty","errors","undefined","initialValues","addNoticeInitialState","validationSchema","addNoticeSchema","onSubmit","resetForm","newPet","FormData","append","Number","addNotice","error","errorToast","message","successToast","catch","validateOnChange","values","autoComplete","encType","control","label","as","color","placeholder","id","width","maxW","display","flexDirection","base","md","justifyContent","controle","onClick","mr","fontSize","fontWeight","lineHeight","letterSpacing","mx","borderRadius","plusSize","emptyColor","textAlign","AddIcon","createIcon","d","displayName","useDisclosure","isOpen","onOpen","isLoggedIn","getIsLoggedIn","maxWidth","xl","flexWrap","gap","ml","to","exact","w","h","alignItems","bgColor","position","top","right","zIndex","fontStyle","backgroundColor","_hover","_focus","ModalAddNotice","setSearchQuery","navigate","useNavigate","getNoticesError","useEffect","Suspense","fallback"],"sourceRoot":""}