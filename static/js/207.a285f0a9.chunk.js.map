{"version":3,"file":"static/js/207.a285f0a9.chunk.js","mappings":"yQAEiBA,EAAU,mCAAG,sGACCC,MAAM,GAAD,OAHnB,sDAGmB,cADN,cAChBC,EADgB,OAEhBC,EAASD,EAASE,OAFF,kBAGfD,GAHe,2CAAH,qD,wFCSdE,EAAW,SAAC,GAAkB,IAAD,IAAfC,EAAe,EAAfA,SACnBC,EAAO,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAExDC,GADc,IAAIC,MACOC,SAEzBC,EAAe,WACnB,OAAmB,IAAfH,EACK,EAEFA,EAAa,CACrB,EACD,OACE,+BACE,UAAC,IAAD,YACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEI,WAAY,QACZC,eAAgB,QAChBC,QAAQ,OACRC,MAAO,UACPC,WAAY,SACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,OAAQC,GAAI,SAC5CE,KAAK,QARP,SAUGhB,EAASK,KAAgBY,MAAQjB,EAASK,KAAgBa,GAA1D,oBACMlB,EAASK,YADf,aACM,EAA0BY,KADhC,wBAEKjB,EAASK,YAFd,aAEK,EAA0Ba,IAE5B,cAGR,SAAC,IAAD,CAAgBC,KAAM,QAAtB,UACE,SAAC,IAAD,CACEC,QAAS,eACTC,EAAG,OACHC,OAAQ,oBACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,kCACXC,aAAc,IACdhB,WAAY,SACZC,SAAU,KACVI,WAAY,OAVd,SAYGf,EAAS2B,KAAI,WAAuBC,GAAvB,IAAGX,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIW,EAAb,EAAaA,OAAb,OACZ,SAAC,KAAD,UACGA,GACC,UAAC,KAAD,CACET,QAAS,OACTb,eAAgB,gBAChBiB,QACEI,EAAQ,IAAM1B,EACV,sBACA,UAENwB,aAAc,KACdI,GAAI,MATN,WAWE,SAAC,IAAD,UAAO7B,EAAK2B,MACZ,UAAC,IAAD,WACGX,EADH,IACUC,SAIZ,UAAC,KAAD,CACEE,QAAS,OACTb,eAAgB,gBAChBiB,QACEI,EAAQ,IAAM1B,EACV,sBACA,UAENwB,aAAc,KACdI,GAAI,MATN,WAWE,UAAC,IAAD,WAAO7B,EAAK2B,GAAZ,QACA,SAAC,IAAD,0BA/BIG,EAAAA,EAAAA,MADE,YA0CzB,E,qECrFYC,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC/B,OACE,SAAC,IAAD,CACEC,aAAc,SACdC,QAAS,CAAEvB,KAAM,EAAGC,GAAI,EAAGC,GAAI,GAC/BsB,QAAS,CAAExB,KAAM,IAAKC,GAAI,KAH5B,SAKGoB,EAAQN,KACP,gBACEU,EADF,EACEA,IACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,IACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,QACAC,EANF,EAMEA,SACA1C,EAPF,EAOEA,SACA2C,EARF,EAQEA,MACAC,EATF,EASEA,MATF,OAWE,UAAC,IAAD,CACEpB,QAAS,UACTE,aAAc,KACdD,UAAW,qCAEXoB,EAAG,CAAEjC,KAAM,QAASC,GAAI,QAASC,GAAI,SACrCO,EAAG,CAAET,KAAM,IAAKC,GAAI,KANtB,WAQE,SAAC,IAAD,CACEiC,GAAI,KACJzB,EAAG,EACH0B,UAAW,SACXC,GAAI,CAAEpC,KAAM,IAAKC,GAAI,GACrBoC,GAAI,CAAErC,KAAM,IAAKC,GAAI,GACrBJ,MAAO,UACPC,WAAY,OACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,QAASC,GAAI,QAT/C,UAWE,SAAC,IAAD,CACEoC,SAAU,WACVzC,MAAO,UACP0C,KAAMZ,EACNa,OAAO,SACPC,IAAI,aALN,SAOGf,OAIL,UAAC,IAAD,CACEgB,UAAW,CAAE1C,KAAM,SAAU2C,GAAI,OACjCP,GAAI,CAAEpC,KAAM,IAAKC,GAAI,KAFvB,WAIE,SAAC,KAAD,CAAK2C,SAAU,CAAE5C,KAAM,QAASC,GAAI,QAAS4C,GAAI,SAAjD,UACE,SAAC,IAAD,CAAOC,EAAG,EAAGC,IAAKjB,EAAUkB,IAAKtB,OAEnC,SAAC,IAAD,WACE,UAAC,IAAD,CAAUjB,EAAG,EAAb,WACE,UAAC,KAAD,CACEyB,GAAG,MACH1B,QAAS,OACTyC,cAAe,SACfd,UAAW,QACXE,GAAI,CAAErC,KAAM,IAAKC,GAAI,IAAKC,GAAI,KAC9BJ,WAAY,SACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,OAAQC,GAAI,SAC5CL,MAAO,UACPyC,SAAU,WAVZ,kBAaGlD,GAAW,SAACD,EAAD,CAAUC,SAAUA,KAAe,sBAEjD,UAAC,KAAD,CACE8C,GAAG,MACH1B,QAAS,OACTyC,cAAe,SACfd,UAAW,QACXE,GAAI,CAAErC,KAAM,IAAKC,GAAI,IAAKC,GAAI,KAC9BJ,WAAY,SACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,OAAQC,GAAI,SAC5CL,MAAO,UACPO,KAAK,UAVP,sBAaE,SAAC,IAAD,CAAMmC,KAAMX,EAAYY,OAAO,SAASC,IAAI,aAA5C,SACGZ,GAAU,0BAAOA,KAAkB,wBAGxC,UAAC,KAAD,CACEK,GAAG,MACH1B,QAAS,OACTyC,cAAe,SACfd,UAAW,QACXE,GAAI,CAAErC,KAAM,IAAKC,GAAI,IAAKC,GAAI,KAC9BJ,WAAY,SACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,OAAQC,GAAI,SAC5CL,MAAO,UACPO,KAAK,QAVP,oBAaE,UAAC,IAAD,CAAMmC,KAAK,mBAAX,UACGP,IAAgB,SAAC,IAAD,IAAU,WAG/B,UAAC,KAAD,CACEE,GAAG,MACH1B,QAAS,OACTyC,cAAe,SACfd,UAAW,QACXrC,WAAY,SACZC,SAAU,CAAEC,KAAM,KAAMC,GAAI,KAAMC,GAAI,MACtCC,WAAY,CAAEH,KAAM,OAAQC,GAAI,OAAQC,GAAI,SAC5CL,MAAO,UACPO,KAAK,QATP,oBAYE,UAAC,IAAD,CAAMmC,KAAK,cAAX,cAA2BR,IAAgB,kBAA3C,oBAhGHN,EAfT,KAyHP,EChGD,EAtCmB,WACjB,OAA8ByB,EAAAA,EAAAA,UAAS,IAAvC,eAAO7B,EAAP,KAAgB8B,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,SAG2BvE,IAH3B,OAGUE,EAHV,OAIImE,EAAWnE,GAJf,gDAMIuE,QAAQC,IAAI,KAAMC,SANtB,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdtE,EACD,GAAE,KAGD,SAAC2E,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAASC,GAAI,CAAE5D,KAAM,OAAQC,GAAI,OAAQC,GAAI,QAA7C,WACE,SAAC,IAAD,CACEgC,GAAI,KACJnC,SAAU,CAAEC,KAAM,MAAOC,GAAI,OAC7BH,WAAY,OACZK,WAAY,QACZgC,UAAW,SACXE,GAAI,CAAErC,KAAM,KAAMC,GAAI,OAAQ4C,GAAI,QANpC,wBAUCO,GAAY,SAACS,EAAA,EAAD,KAAa,SAACzC,EAAD,CAAgBC,QAASA,QAI1D,C","sources":["pages/OurFriends/getFriends.jsx","components/OurFriendsList/WorkTime.jsx","components/OurFriendsList/OurFriendsList.jsx","pages/OurFriends/OurFriends.jsx"],"sourcesContent":["const BASE_URL = \"https://goit-project-petly-backend.onrender.com/api\";\n    \n    export const getFriends = async () => {\n        const response = await fetch(`${BASE_URL}/services`);\n        const result = response.json();\n        return result;\n    };\n","import { nanoid } from 'nanoid';\nimport {\n  Box,\n  Button,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Text,\n} from '@chakra-ui/react';\n\nexport const WorkTime = ({ workDays }) => {\n  const days = ['MN: ', 'TU: ', 'WE: ', 'TH: ', 'FR: ', 'SA: ', 'SU: '];\n  const currentDate = new Date();\n  const currentDay = currentDate.getDay();\n\n  const indexUpdater = () => {\n    if (currentDay === 0) {\n      return 6;\n    }\n    return currentDay - 1;\n  };\n  return (\n    <>\n      <Popover>\n        <PopoverTrigger>\n          <Button\n            alignItems={'start'}\n            justifyContent={'start'}\n            variant=\"link\"\n            color={'#111111'}\n            fontWeight={'medium'}\n            fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n            lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n            type=\"click\"\n          >\n            {workDays[indexUpdater()].from && workDays[indexUpdater()].to\n              ? `${workDays[indexUpdater()]?.from} - ${\n                  workDays[indexUpdater()]?.to\n                }`\n              : 'Closed'}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent maxW={'120px'}>\n          <PopoverBody\n            display={'inline-block'}\n            p={'12px'}\n            border={'1px solid #f59256'}\n            cursor={'pointer'}\n            bgColor={'#FFFFFF'}\n            boxShadow={'4px 4px 8px rgba(0, 0, 0, 0.25)'}\n            borderRadius={'2'}\n            fontWeight={'medium'}\n            fontSize={'xs'}\n            lineHeight={'1.34'}\n          >\n            {workDays.map(({ from, to, isOpen }, index) => (\n              <Box key={nanoid()}>\n                {isOpen ? (\n                  <Box\n                    display={'flex'}\n                    justifyContent={'space-between'}\n                    bgColor={\n                      index + 1 === currentDay\n                        ? 'accent.accentOrange'\n                        : 'inherit'\n                    }\n                    borderRadius={'sm'}\n                    px={'0.5'}\n                  >\n                    <Text>{days[index]}</Text>\n                    <Text>\n                      {from}-{to}\n                    </Text>\n                  </Box>\n                ) : (\n                  <Box\n                    display={'flex'}\n                    justifyContent={'space-between'}\n                    bgColor={\n                      index + 1 === currentDay\n                        ? 'accent.accentOrange'\n                        : 'inherit'\n                    }\n                    borderRadius={'sm'}\n                    px={'0.5'}\n                  >\n                    <Text>{days[index]} </Text>\n                    <Text>Closed</Text>\n                  </Box>\n                )}\n              </Box>\n            ))}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n","import { WorkTime } from './WorkTime';\nimport {\n  SimpleGrid,\n  CardHeader,\n  Card,\n  Text,\n  Box,\n  Image,\n  Link,\n  Stack,\n  CardBody,\n} from '@chakra-ui/react';\n\nexport const OurFriendsList = ({ friends }) => {\n  return (\n    <SimpleGrid\n      justifyItems={'center'}\n      columns={{ base: 1, md: 2, lg: 3 }}\n      spacing={{ base: '3', md: '8' }}\n    >\n      {friends.map(\n        ({\n          _id,\n          title,\n          url,\n          addressUrl,\n          address,\n          imageUrl,\n          workDays,\n          phone,\n          email,\n        }) => (\n          <Card\n            bgColor={'#FFFFFF'}\n            borderRadius={'10'}\n            boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n            key={_id}\n            w={{ base: '280px', md: '336px', lg: '394px' }}\n            p={{ base: '3', md: '4' }}\n          >\n            <CardHeader\n              as={'h3'}\n              p={0}\n              textAlign={'center'}\n              mt={{ base: 2.5, md: 4 }}\n              mb={{ base: 2.5, md: 4 }}\n              color={'#F59256'}\n              fontWeight={'bold'}\n              fontSize={{ base: 'sm', md: 'md', lg: 'xl' }}\n              lineHeight={{ base: '1.33', md: 'short', lg: '1.35' }}\n            >\n              <Link\n                position={'relative'}\n                color={'#f59256'}\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {title}\n              </Link>\n            </CardHeader>\n\n            <Stack\n              direction={{ base: 'column', sm: 'row' }}\n              mt={{ base: '3', md: '4' }}\n            >\n              <Box maxWidth={{ base: '110px', md: '120px', xl: '158px' }}>\n                <Image m={0} src={imageUrl} alt={title} />\n              </Box>\n              <Stack>\n                <CardBody p={0}>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '1', md: '2', lg: '3' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    position={'relative'}\n                  >\n                    Time:\n                    {workDays ? <WorkTime workDays={workDays} /> : <hr />}\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '1', md: '2', lg: '3' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"address\"\n                  >\n                    Address:\n                    <Link href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {address ? <span>{address}</span> : <hr />}\n                    </Link>\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    mb={{ base: '1', md: '2', lg: '3' }}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"email\"\n                  >\n                    Email:\n                    <Link href=\"mailto:{address}\">\n                      {email ? email : <Text />}{' '}\n                    </Link>\n                  </Box>\n                  <Box\n                    as=\"div\"\n                    display={'flex'}\n                    flexDirection={'column'}\n                    textAlign={'start'}\n                    fontWeight={'medium'}\n                    fontSize={{ base: 'xs', md: 'sm', lg: 'md' }}\n                    lineHeight={{ base: '1.33', md: '1.35', lg: 'short' }}\n                    color={'#111111'}\n                    type=\"phone\"\n                  >\n                    Phone:\n                    <Link href=\"tel:{phone}\"> {phone ? phone : <hr />} </Link>\n                  </Box>\n                </CardBody>\n              </Stack>\n            </Stack>\n          </Card>\n        )\n      )}\n    </SimpleGrid>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport Container from '../../shared/components/Box/Container';\nimport Section from '../../shared/components/Box/Section';\nimport { Heading } from '@chakra-ui/react';\nimport Loader from 'components/Loader/Loader';\nimport { getFriends } from './getFriends';\nimport { OurFriendsList } from '../../components/OurFriendsList/OurFriendsList';\n\nconst OurFriends = () => {\n  const [friends, setFriends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getFriends();\n        setFriends(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, []);\n\n  return (\n    <Container>\n      <Section pt={{ base: '58px', md: '94px', lg: '72px' }}>\n        <Heading\n          as={'h1'}\n          fontSize={{ base: '2xl', md: '5xl' }}\n          fontWeight={'bold'}\n          lineHeight={'short'}\n          textAlign={'center'}\n          mb={{ base: '10', md: '45px', xl: '60px' }}\n        >\n          Our friend\n        </Heading>\n        {isLoading ? <Loader /> : <OurFriendsList friends={friends} />}\n      </Section>\n    </Container>\n  );\n};\n\nexport default OurFriends;\n"],"names":["getFriends","fetch","response","result","json","WorkTime","workDays","days","currentDay","Date","getDay","indexUpdater","alignItems","justifyContent","variant","color","fontWeight","fontSize","base","md","lg","lineHeight","type","from","to","maxW","display","p","border","cursor","bgColor","boxShadow","borderRadius","map","index","isOpen","px","nanoid","OurFriendsList","friends","justifyItems","columns","spacing","_id","title","url","addressUrl","address","imageUrl","phone","email","w","as","textAlign","mt","mb","position","href","target","rel","direction","sm","maxWidth","xl","m","src","alt","flexDirection","useState","setFriends","isLoading","setIsLoading","useEffect","console","log","message","Container","Section","pt","Loader"],"sourceRoot":""}