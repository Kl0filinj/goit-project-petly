{"version":3,"file":"static/js/207.097ca5c9.chunk.js","mappings":"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","sources":["pages/OurFriends/getFriends.jsx","components/OurFriendsList/WorkTime.jsx","components/OurFriendsList/OurFriendsList.jsx","pages/OurFriends/OurFriends.jsx"],"sourcesContent":["const BASE_URL = \"https://goit-project-petly-backend.onrender.com/api\";\n    \n    export const getFriends = async () => {\n        const response = await fetch(`${BASE_URL}/services`);\n        const result = response.json();\n        return result;\n    };\n","import { nanoid } from 'nanoid';\nimport {\n  Box,\n  Button,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Text,\n} from '@chakra-ui/react';\n\nexport const WorkTime = ({ workDays }) => {\n  const days = ['MN: ', 'TU: ', 'WE: ', 'TH: ', 'FR: ', 'SA: ', 'SU: '];\n  const currentDate = new Date();\n  const currentDay = currentDate.getDay();\n\n  const indexUpdater = () => {\n    if (currentDay === 0) {\n      return 6;\n    }\n    return currentDay - 1;\n  };\n  return (\n    <>\n      <Popover>\n        <PopoverTrigger>\n          <Button\n            alignItems={'start'}\n            justifyContent={'start'}\n            variant=\"link\"\n            color={'#111111'}\n            fontWeight={'medium'}\n            fontSize={{ base: 'xs', md: 'sm', xl: 'md' }}\n            lineHeight={{ base: '1.33', md: '1.35', xl: 'short' }}\n            type=\"click\"\n          >\n            {workDays[indexUpdater()].from && workDays[indexUpdater()].to\n              ? `${workDays[indexUpdater()]?.from} - ${\n                  workDays[indexUpdater()]?.to\n                }`\n              : 'Closed'}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent maxW={'120px'}>\n          <PopoverBody\n            display={'inline-block'}\n            p={'12px'}\n            border={'1px solid #f59256'}\n            cursor={'pointer'}\n            bgColor={'#FFFFFF'}\n            boxShadow={'4px 4px 8px rgba(0, 0, 0, 0.25)'}\n            borderRadius={'2'}\n            fontWeight={'medium'}\n            fontSize={'xs'}\n            lineHeight={'1.34'}\n          >\n            {workDays.map(({ from, to, isOpen }, index) => (\n              <Box key={nanoid()}>\n                {isOpen ? (\n                  <Box\n                    display={'flex'}\n                    justifyContent={'space-between'}\n                    bgColor={\n                      index + 1 === currentDay\n                        ? 'accent.accentOrange'\n                        : 'inherit'\n                    }\n                    borderRadius={'sm'}\n                    px={'0.5'}\n                  >\n                    <Text>{days[index]}</Text>\n                    <Text>\n                      {from}-{to}\n                    </Text>\n                  </Box>\n                ) : (\n                  <Box\n                    display={'flex'}\n                    justifyContent={'space-between'}\n                    bgColor={\n                      index + 1 === currentDay\n                        ? 'accent.accentOrange'\n                        : 'inherit'\n                    }\n                    borderRadius={'sm'}\n                    px={'0.5'}\n                  >\n                    <Text>{days[index]} </Text>\n                    <Text>Closed</Text>\n                  </Box>\n                )}\n              </Box>\n            ))}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n","import { WorkTime } from './WorkTime';\nimport {\n  SimpleGrid,\n  CardHeader,\n  Card,\n  Text,\n  Box,\n  Image,\n  Link,\n  Stack,\n  CardBody,\n} from '@chakra-ui/react';\n\nexport const OurFriendsList = ({ friends }) => {\n  return (\n    <SimpleGrid\n      justifyItems={'center'}\n      maxW={{md: '704px', xl: '1240px',}}\n      columns={{ base: 1, md: 2, xl: 3 }}\n      spacing={{ base: '3', md: '8' }}\n      ml={'auto'}\n      mr={'auto'}\n    >\n      {friends.map(\n        ({\n          _id,\n          title,\n          url,\n          addressUrl,\n          address,\n          imageUrl,\n          workDays,\n          phone,\n          email,\n        }) => (\n          <Card\n            bgColor={'#FFFFFF'}\n            borderRadius={{base:'20px', md:'40px'}}\n            boxShadow={'7px 4px 14px rgba(49, 21, 4, 0.07)'}\n            key={_id}\n            w={{ base: '280px', md: '336px', xl: '394px'}}\n            py={{ base: '3', md: '4' }}\n            px='1'\n          >\n            <CardHeader\n              as={'h3'}\n              p={0}\n              textAlign={'center'}\n              color={'#F59256'}\n              fontWeight={'bold'}\n              fontSize={{ base: 'xs', md: 'md', xl: 'xl' }}\n              lineHeight={{ base: '1.33', md: 'short', xl: '1.35' }}\n            >\n              <Link\n                position={'relative'}\n                color={'#f59256'}\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                textDecoration='underline'\n                textDecorationThickness='1px'\n              >\n                {title}\n              </Link>\n            </CardHeader>\n\n            <Stack\n              direction={{ base: 'column', sm: 'row' }}\n              mt={{ base: '3', md: '4' }}\n              spacing={{ base: '3', md: '3.5', xl: '4' }}\n            >\n              <Box \n              w={{ base: '110px', md: '120px', xl: '158px' }}\n              h={{ base: '78px', md: '85px', xl: '112px' }}\n              display='flex'\n              justifyContent='center'\n              >\n                <Image m={0} src={imageUrl} alt={title} />\n              </Box>\n              <Box\n              w={{ base: '150px', md: '194px', xl: '213px' }}\n              h={{ base: 'full', md: 'full', xl: 'full' }}\n              >\n                <Stack>\n                  <CardBody p={0}>\n                    <Box\n                      as=\"div\"\n                      display={'flex'}\n                      flexDirection={'column'}\n                      textAlign={'start'}\n                      mb={{ base: '1', md: '2', xl: '3' }}\n                      fontWeight={'medium'}\n                      fontSize={{ base: 'xs', md: 'sm', xl: 'md' }}\n                      lineHeight={{ base: '1.33', md: '1.35', xl: 'short' }}\n                      color={'#111111'}\n                      position={'relative'}\n                    >\n                      Time:\n                      {workDays ? <WorkTime workDays={workDays} /> : <hr />}\n                    </Box>\n                    <Box\n                      as=\"div\"\n                      display={'flex'}\n                      flexDirection={'column'}\n                      textAlign={'start'}\n                      mb={{ base: '1', md: '2', xl: '3' }}\n                      fontWeight={'medium'}\n                      fontSize={{ base: 'xs', md: 'sm', xl: 'md' }}\n                      lineHeight={{ base: '1.33', md: '1.35', xl: 'short' }}\n                      color={'#111111'}\n                      type=\"address\"\n                    >\n                      Address:\n                      <Link href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                        {address ? <span>{address}</span> : <hr />}\n                      </Link>\n                    </Box>\n                    <Box\n                      as=\"div\"\n                      display={'flex'}\n                      flexDirection={'column'}\n                      textAlign={'start'}\n                      mb={{ base: '1', md: '2', xl: '3' }}\n                      fontWeight={'medium'}\n                      fontSize={{ base: 'xs', md: 'sm', xl: 'md' }}\n                      lineHeight={{ base: '1.33', md: '1.35', xl: 'short' }}\n                      color={'#111111'}\n                      type=\"email\"\n                    >\n                      Email:\n                      <Link href=\"mailto:{address}\">\n                        {email ? email : <Text />}{' '}\n                      </Link>\n                    </Box>\n                    <Box\n                      as=\"div\"\n                      display={'flex'}\n                      flexDirection={'column'}\n                      textAlign={'start'}\n                      fontWeight={'medium'}\n                      fontSize={{ base: 'xs', md: 'sm', xl: 'md' }}\n                      lineHeight={{ base: '1.33', md: '1.35', xl: 'short' }}\n                      color={'#111111'}\n                      type=\"phone\"\n                    >\n                      Phone:\n                      <Link href=\"tel:{phone}\"> {phone ? phone : <hr />} </Link>\n                    </Box>\n                  </CardBody>\n                </Stack>\n              </Box>\n            </Stack>\n          </Card>\n        )\n      )}\n    </SimpleGrid>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport Container from '../../shared/components/Box/Container';\nimport Section from '../../shared/components/Box/Section';\nimport { Heading, Box } from '@chakra-ui/react';\nimport Loader from 'components/Loader/Loader';\nimport { getFriends } from './getFriends';\nimport { OurFriendsList } from '../../components/OurFriendsList/OurFriendsList';\n\nconst OurFriends = () => {\n  const [friends, setFriends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setIsLoading(true);\n        const response = await getFriends();\n        setFriends(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetch();\n  }, []);\n\n  return (\n    <Box \n    h={{base:\"calc(100vh - 74px)\", md:\"calc(100vh - 96px)\", xl:\"calc(100vh - 88px)\"}} \n    bg='accent.background'>\n    <Container>\n      <Section>\n        <Heading\n          as={'h1'}\n          fontSize={{ base: '2xl', md: '5xl' }}\n          fontWeight={'bold'}\n          lineHeight={'short'}\n          textAlign={'center'}\n          mb={{ base: '7', md: '10', xl: '60px' }}\n        >\n          Our friends\n        </Heading>\n        {isLoading ? <Loader /> : <OurFriendsList friends={friends} />}\n      </Section>\n    </Container>\n    </Box>\n  );\n};\n\nexport default OurFriends;\n"],"names":["getFriends","fetch","response","result","json","WorkTime","workDays","days","currentDay","Date","getDay","indexUpdater","alignItems","justifyContent","variant","color","fontWeight","fontSize","base","md","xl","lineHeight","type","from","to","maxW","display","p","border","cursor","bgColor","boxShadow","borderRadius","map","index","isOpen","px","nanoid","OurFriendsList","friends","justifyItems","columns","spacing","ml","mr","_id","title","url","addressUrl","address","imageUrl","phone","email","w","py","as","textAlign","position","href","target","rel","textDecoration","textDecorationThickness","direction","sm","mt","h","m","src","alt","flexDirection","mb","useState","setFriends","isLoading","setIsLoading","useEffect","console","log","message","bg","Container","Section","Loader"],"sourceRoot":""}