{"version":3,"file":"static/js/364.f692fc87.chunk.js","mappings":"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","sources":["redux/filter/filter-selector.js","components/NoticesSearch/NoticesSearch.jsx","components/ModalAddNotice/addNoticeInitialState.js","components/ModalAddNotice/addNoticeSchema.js","components/ModalAddNotice/ModalAddNotice.jsx","../node_modules/@chakra-ui/icons/dist/chunk-VJ54TX72.mjs","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["export const getFilter = ({filter}) => filter;","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FilterInput } from 'shared/components';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selector';\nimport { setFilter } from 'redux/filter/filter-slice';\n\n\nconst NoticesSearch = ({submitFunction}) => {\n  const dispatch = useDispatch();\n  const searchQuery = useSelector(getFilter);\n  const [isSubmited, setIsSubmited] = useState(false);\n  const location = useLocation();\n  const categoryName = useMemo(() => location.pathname.split('/')[2], [location.pathname]);\n\n\n  useEffect(()=>{\n    if (searchQuery==='') {\n      setIsSubmited(false);\n    }\n  },[searchQuery]);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast('What pet do you need?');\n      return;    }\n\n    submitFunction();\n    setIsSubmited(true); \n  };\n\n  const clearInput = () => {\n    dispatch(setFilter(\"\"));\n    setIsSubmited(false);\n  };\n\n  return (\n    <FilterInput\n        type=\"text\"\n        name={'search'}\n        onChange={handleChange}\n        handleSearch={handleSubmit}\n        handleClear={clearInput}\n        value={searchQuery}\n        isSubmited={isSubmited}\n        mb={'28px'}\n        category={categoryName}\n      />\n  );\n};\n\nexport default NoticesSearch;\n","const addNoticeInitialState = {\n    categoryName: 'lost-found',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: 'male',\n    location: '',\n    price: '',\n    photo: null,\n    comments: '',\n}\n\nexport default addNoticeInitialState","import * as yup from 'yup';\nimport moment from 'moment/moment'\n\nconst regexPrice = /(^[1-9])(\\d*)$/\nconst regexAdress = /^(?:(?:\\w+-\\w+)+|(?:\\w+)+),\\s(?:(?:\\w+-\\w+)+|(?:\\w+)+)$/\nconst regexTitle = /^(?!(?:.*?\\d){3})(.+)$/u\nconst regexName = /^[A-Za-zА-Яа-яёЁЇїІіЄєҐґ\\s\\-']+$/\nconst regexBreed = /^[A-Za-zА-Яа-яёЁЇїІіЄєҐґ\\s\\-']+$/\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\nconst FILE_SIZE = 1000000\n\nconst addNoticeSchema = yup.object().shape({\n    categoryName: yup.string().oneOf(['lost-found', 'for-free', 'sell']).required(\"Required\"),\n    title: yup.string().min(2).max(48).matches(regexTitle, 'Can contain only two digits').required(\"Required\"),\n    name: yup.string().min(2).max(16).matches(regexName, 'Can only contain letters'),\n    birthday: yup.date().min(moment(\"06021995\", \"DDMMYYYY\"), 'Must be at later than 06.02.1995').max(moment(), `Must be at earlier than ${moment().add(1, 'days').format('DD.MM.YYYY')}`),\n    breed: yup.string().min(2).max(24).matches(regexBreed, 'Can only contain letters'),\n    sex: yup.string().oneOf(['male', 'female']).required(\"Required\"),\n    location: yup.string().matches(regexAdress, 'Must be in format City, Region').required(\"Required\"),\n    price: yup.string().when('categoryName', {\n      is: 'sell',\n      then: (schema) => schema.matches(regexPrice, 'Must be a positive integer number').required(\"Required\"),\n      otherwise: (schema) => schema.notRequired(),\n    }),\n    photo: yup.mixed()\n    .test(\n      'fileSize',\n      'Only documents up to 1MB are permitted',\n      (value) => value === null || (value && value.size <= FILE_SIZE)\n    )\n    .test(\n      'fileFormat',\n      'Unsupported file type',\n      (value) => value === null || (value && SUPPORTED_FORMATS.includes(value.type))\n    ).nullable(),\n    comments: yup.string().min(8).max(120).required(\"Required\"),\n});\n\nexport default addNoticeSchema\n","import { Formik, Form } from 'formik';\nimport { useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport moment from 'moment/moment';\nimport { Text, Box, Spinner } from '@chakra-ui/react';\nimport { addNotice } from 'redux/notices/notices-operations';\nimport { getNoticesLoading } from 'redux/notices/notices-selectors';\nimport {\n  FormikControl,\n  Button,\n  errorToast,\n  successToast,\n} from 'shared/components';\nimport { addNoticeInitialState, addNoticeSchema } from './index';\nimport { useLocation } from 'react-router-dom';\n\nconst ModalAddsNotice = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getNoticesLoading);\n  const location = useLocation();\n  const category = useMemo(\n    () => location.pathname.split('/')[2],\n    [location.pathname]\n  );\n  const [firstStep, setFirstStep] = useState(true);\n\n  const titleId = useMemo(() => nanoid(), []);\n  const nameId = useMemo(() => nanoid(), []);\n  const birthdayId = useMemo(() => nanoid(), []);\n  const breedId = useMemo(() => nanoid(), []);\n  const locationId = useMemo(() => nanoid(), []);\n  const priceId = useMemo(() => nanoid(), []);\n  const photoId = useMemo(() => nanoid(), []);\n  const commentsId = useMemo(() => nanoid(), []);\n\n  function isDisabled(dirty, errors) {\n    const { title, name, birthday, breed } = errors;\n    return (\n      !dirty ||\n      title !== undefined ||\n      name !== undefined ||\n      birthday !== undefined ||\n      breed !== undefined\n    );\n  }\n\n  const handleSubmit = (\n    {\n      categoryName,\n      title,\n      name,\n      birthday,\n      breed,\n      sex,\n      location,\n      price,\n      photo,\n      comments,\n    },\n    { resetForm }\n  ) => {\n    const newPet = new FormData();\n    newPet.append('categoryName', categoryName);\n    newPet.append('title', title.trim());\n    newPet.append('name', name.trim());\n    newPet.append(\n      'birthdate',\n      birthday ? moment(birthday, 'YYYYY-MM-DD').format('DD.MM.YYYY') : null\n    );\n    newPet.append('breed', breed.trim());\n    newPet.append('sex', sex);\n    newPet.append('location', location.trim());\n    newPet.append('price', price ? Number(price) : '');\n    newPet.append('photo', photo);\n    newPet.append('comments', comments.trim());\n\n    dispatch(addNotice({ newPet, category }))\n      .then(({ error }) => {\n        if (error) {\n          return errorToast(error.message);\n        }\n        successToast('Notice successfully added');\n        resetForm();\n        onClose();\n      })\n      .catch(e => errorToast(e.message));\n  };\n\n  return (\n    <Formik\n      initialValues={addNoticeInitialState}\n      validationSchema={addNoticeSchema}\n      onSubmit={handleSubmit}\n      validateOnChange={true}\n    >\n      {({ values, errors, dirty }) => (\n        <Form autoComplete=\"off\" encType=\"multipart/form-data\">\n          {firstStep ? (\n            <>\n              <FormikControl control=\"category-radio\" name=\"categoryName\" />\n              <FormikControl\n                type=\"text\"\n                name=\"title\"\n                label={\n                  <>\n                    Title of ad\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder=\"Type title\"\n                id={titleId}\n                width={60}\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"name\"\n                label=\"Name pet\"\n                placeholder=\"Type name pet\"\n                id={nameId}\n                width={60}\n              />\n              <FormikControl\n                type=\"date\"\n                name=\"birthday\"\n                label=\"Date of birthday\"\n                id={birthdayId}\n                width={60}\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"breed\"\n                label=\"Breed\"\n                placeholder=\"Type breed\"\n                id={breedId}\n                width={60}\n                mb={'40px'}\n              />\n              <Box\n                maxW={'none'}\n                display={'flex'}\n                flexDirection={{ base: 'column', md: 'row-reverse' }}\n                justifyContent={{ base: 'center', md: 'center' }}\n              >\n                <Button\n                  controle=\"secondary\"\n                  onClick={() => setFirstStep(false)}\n                  isDisabled={isDisabled(dirty, errors)}\n                  mb={{ base: '3', md: '0' }}\n                  width={{ md: '180px' }}\n                >\n                  Next\n                </Button>\n                <Button\n                  onClick={onClose}\n                  mr={{ md: '5' }}\n                  width={{ md: '180px' }}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <Box display={'flex'} flexDirection={'column'} maxW={'none'}>\n              <FormikControl\n                control=\"sex-radio\"\n                name=\"sex\"\n                label={\n                  <>\n                    The sex\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n              />\n              <FormikControl\n                type=\"text\"\n                name=\"location\"\n                label={\n                  <>\n                    Location\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder='Type location, e.g. \"Kyiv, UA\"'\n                id={locationId}\n                width={'60'}\n              />\n              {values.categoryName === 'sell' && (\n                <FormikControl\n                  type=\"text\"\n                  name=\"price\"\n                  label={\n                    <>\n                      Price\n                      <Text as={'span'} color={'accent.accentOrange'}>\n                        *\n                      </Text>\n                    </>\n                  }\n                  placeholder=\"Type price\"\n                  id={priceId}\n                  width={'60'}\n                />\n              )}\n              <Text\n                fontSize={{ base: '18px', md: '2xl' }}\n                fontWeight={'medium'}\n                lineHeight={{ base: 'short', md: '1.2' }}\n                letterSpacing={'-0.01em'}\n                mb={'5'}\n              >\n                Load the pet`s image\n              </Text>\n              <FormikControl\n                control=\"file\"\n                id={photoId}\n                name={'photo'}\n                size={{ base: '116px', md: '140px' }}\n                mx={0}\n                borderRadius={'20px'}\n                plusSize={{ base: '55%', md: '50%' }}\n              />\n              <FormikControl\n                control=\"textarea\"\n                name=\"comments\"\n                label={\n                  <>\n                    Comments\n                    <Text as={'span'} color={'accent.accentOrange'}>\n                      *\n                    </Text>\n                  </>\n                }\n                placeholder=\"Type comments\"\n                id={commentsId}\n              />\n              <Box\n                maxW={'none'}\n                width={'full'}\n                display={'flex'}\n                flexDirection={{ base: 'column', md: 'row-reverse' }}\n                justifyContent={{ base: 'center', md: 'center' }}\n              >\n                <Button\n                  type=\"submit\"\n                  mb={{ base: '3', md: '0' }}\n                  controle=\"secondary\"\n                  width={{ md: '180px' }}\n                >\n                  {isLoading\n                  ? <> Adding <Spinner emptyColor='#FF6101'\n                                      color='#F5F5F5'\n                                      textAlign='center'\n                                      size='xs'/></>\n                  : 'Done'}\n                </Button>\n                <Button\n                  onClick={() => setFirstStep(true)}\n                  mr={{ md: '5' }}\n                  width={{ md: '180px' }}\n                >\n                  Back\n                </Button>\n              </Box>\n            </Box>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ModalAddsNotice;\n","// src/Add.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport {\n  AddIcon\n};\n","import { FilterLink, Modal } from 'shared/components';\nimport { Box, useDisclosure, Text, Button } from '@chakra-ui/react';\nimport { ModalAddNotice } from 'components/ModalAddNotice';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\nimport { toast } from 'react-toastify';\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst NoticesCategoriesNav = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      toast('Please log in!');\n      return;\n    }\n    onOpen(true);\n  };\n\n  return (\n    <Box\n      maxWidth={{ base: '280px', md: '704px', xl: '1248px' }}\n      mx={'auto'}\n      id=\"22\"\n    >\n      <Box mb={{ base: '30px', md: '60px' }} display={'flex'}>\n        <Box\n          as={'nav'}\n          maxW={{ base: '280px', md: '474px', xl: '802px' }}\n          display={'flex'}\n          flexWrap={'wrap'}\n          gap={{ base: '12px', md: '16px 12px', xl: '12px' }}\n          mr={'auto'}\n          ml={{ base: 'auto', md: '0' }}\n        >\n          <FilterLink to={'lost-found'}>lost/found</FilterLink>\n          <FilterLink to={'for-free'}>in good hand</FilterLink>\n          <FilterLink exact=\"true\" to={'sell'}>\n            sell\n          </FilterLink>\n          {isLoggedIn && (\n            <>\n              <FilterLink to={'favorite'}>favorite ads</FilterLink>\n              <FilterLink to={'own'}>my ads</FilterLink>\n            </>\n          )}\n        </Box>\n\n        <Box\n          display={'flex'}\n          w={{ base: '80px', md: '140px' }}\n          h={{ base: '80px' }}\n          flexDirection={{ base: 'column-reverse', md: 'row' }}\n          alignItems={{ base: 'center' }}\n          justifyContent={{ base: 'center' }}\n          borderRadius={{ base: '50%', md: '100%' }}\n          bgColor={{ base: '#F59256', md: 'transparent' }}\n          position={{ base: 'fixed', md: 'static' }}\n          top={'455px'}\n          right={'20px'}\n          zIndex={'2'}\n        >\n          <Text\n            maxWidth={{ xl: '767px' }}\n            size={{ w: '74px', h: '27px' }}\n            textAlign={'center'}\n            fontStyle={'normal'}\n            fontWeight={'500'}\n            fontSize={{ base: '12px', md: '20px' }}\n            lineHeight={'27px'}\n            mr={{ base: '0px', md: '12px' }}\n            color={{ base: 'white', md: '#111111' }}\n          >\n            Add pet\n          </Text>\n          <Button\n            display={'flex'}\n            alignItems={{ base: 'center' }}\n            justifyContent={{ base: 'center' }}\n            backgroundColor={'#F59256'}\n            borderRadius={'50%'}\n            w={{ base: '21px', md: '44px' }}\n            h={{ base: '21px', md: '44px' }}\n            _hover={{ backgroundColor: '#FF6101' }}\n            _focus={{ backgroundColor: '#FF6101' }}\n            onClick={handleClick}\n          >\n            <AddIcon\n              w={{ base: '21px', md: '16px' }}\n              h={{ base: '21px', md: '16px' }}\n              color={'white'}\n            />\n          </Button>\n        </Box>\n\n        <Modal isOpen={isOpen} onClose={onClose} title={'Add pet'}>\n          <ModalAddNotice onClose={onClose} />\n        </Modal>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import { Suspense, useEffect, useMemo } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Heading, Box } from '@chakra-ui/react';\n\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport NoticesPagination from 'components/NoticesPagination/NoticesPagination';\nimport { Container, Section } from 'shared/components';\nimport Loader from 'components/Loader/Loader';\n\nimport { getAllNotices, getFiltredFavoriteNotices, getFiltredUserNotices, getNoticesError, getNoticesLoading } from 'redux/notices/notices-selectors';\nimport { getFavorites, getMyNotice, getNoticesByCategory, getNoticesByCategoryWithQuery } from 'redux/notices/notices-operations';\nimport { getFilter } from 'redux/filter/filter-selector';\n\n\nconst Notices = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const categoryName = location.pathname.split('/')[2];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n\n  const searchQuery = useSelector(getFilter).toLowerCase();\n  const { categories, totalNotices } = useSelector(getAllNotices);\n  const fiteredFavoriteNotices = useSelector(getFiltredFavoriteNotices);\n  const fiteredUserNotices = useSelector(getFiltredUserNotices);\n  const isLoading = useSelector(getNoticesLoading);\n  const error = useSelector(getNoticesError);\n\n  useEffect(() => {\n    setSearchParams({ page: page === null ? 1 : page });\n  }, [page, setSearchParams]);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      if (categoryName === 'favorite') {\n        dispatch(getFavorites());\n        return\n      }\n      if (categoryName === 'own') {\n        dispatch(getMyNotice());\n      } else {\n        dispatch(getNoticesByCategory({categoryName, page}));\n      }      \n    }\n\n  }, [dispatch, categoryName, page, searchQuery]);\n\n  // const query = `?page=${page === null ? 1 : page}&limit=8`;\n\n  const categoryForRender = useMemo(\n    () =>\n      categoryName === 'favorite'\n      ? fiteredFavoriteNotices\n      : categoryName === 'own'\n      ? fiteredUserNotices\n      : categories,\n    [categories, categoryName, fiteredFavoriteNotices, fiteredUserNotices]\n  );\n\n  const searchOnSubmitFunction = () => {\n    if (categoryName === 'own') {\n      dispatch(getMyNotice());\n    } \n    if (categoryName === 'favorite') {\n      dispatch(getFavorites());\n    } else {\n      dispatch(getNoticesByCategoryWithQuery({categoryName, searchQuery}));\n    }\n    \n  } \n\n  return (\n    <Box bgColor={'#FDF7F2'} h={'100vh'}>\n      <Container>\n        <Section>\n          <Heading\n            as={'h1'}\n            fontSize={{ base: '24px', md: '48px' }}\n            fontWeight={'bold'}\n            lineHeight={'short'}\n            textAlign={'center'}\n            mb={7}\n          >\n            Find your favorite pet\n          </Heading>\n          <NoticesSearch submitFunction={searchOnSubmitFunction}/>\n          <NoticesCategoriesNav />\n          <Suspense fallback={null}>\n            {isLoading && <Loader />}            \n            {categoryForRender.length !== 0 ? <NoticesCategoriesList notices={categoryForRender}/> \n            : <Box textAlign={'center'}>\n                <Heading>This Category is empty ^_^</Heading>\n              </Box> } \n            {error && <Heading>Here is problem, try to reload the page</Heading>}\n            {!isLoading && totalNotices > 8 && (\n              <NoticesPagination total={totalNotices} currentPage={page} />\n            )}\n          </Suspense>\n        </Section>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Notices;\n"],"names":["getFilter","filter","submitFunction","dispatch","useDispatch","searchQuery","useSelector","useState","isSubmited","setIsSubmited","location","useLocation","categoryName","useMemo","pathname","split","useEffect","type","name","onChange","e","value","target","setFilter","handleSearch","preventDefault","trim","toast","handleClear","mb","category","title","birthday","breed","sex","price","photo","comments","regexPrice","SUPPORTED_FORMATS","yup","shape","oneOf","required","min","max","matches","moment","add","format","when","is","then","schema","otherwise","notRequired","test","size","includes","nullable","onClose","isLoading","getNoticesLoading","firstStep","setFirstStep","titleId","nanoid","nameId","birthdayId","breedId","locationId","priceId","photoId","commentsId","isDisabled","dirty","errors","undefined","initialValues","addNoticeInitialState","validationSchema","addNoticeSchema","onSubmit","resetForm","newPet","FormData","append","Number","addNotice","error","errorToast","message","successToast","catch","validateOnChange","values","autoComplete","encType","control","label","as","color","placeholder","id","width","maxW","display","flexDirection","base","md","justifyContent","controle","onClick","mr","fontSize","fontWeight","lineHeight","letterSpacing","mx","borderRadius","plusSize","emptyColor","textAlign","AddIcon","createIcon","d","displayName","useDisclosure","isOpen","onOpen","isLoggedIn","getIsLoggedIn","maxWidth","xl","flexWrap","gap","ml","to","exact","w","h","alignItems","bgColor","position","top","right","zIndex","fontStyle","backgroundColor","_hover","_focus","ModalAddNotice","useSearchParams","searchParams","setSearchParams","page","get","toLowerCase","getAllNotices","categories","totalNotices","fiteredFavoriteNotices","getFiltredFavoriteNotices","fiteredUserNotices","getFiltredUserNotices","getNoticesError","getFavorites","getMyNotice","getNoticesByCategory","categoryForRender","getNoticesByCategoryWithQuery","Suspense","fallback","Loader","length","NoticesCategoriesList","notices","NoticesPagination","total","currentPage"],"sourceRoot":""}